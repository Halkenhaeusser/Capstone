#### MASTER CAPSTONE R-CODE #### 

setwd("/Users/johannes/Desktop/Minerva/Capstone/")

#### Packages ####

library(tidyverse)
library(countrycode)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(ggspatial)
library(gganimate)
library(psych)
library(outreg)
library(AER)
library(plotly)
library(reshape2)
library(WDI)
library(readxl)
library(plm)
library(stargazer)
library(ggdag)
library(mice)

library(naniar)
library(finalfit) 
library(ipw)
library(lmtest)

library(corrgram)

library(cobalt)
library(WeightIt)


# set the theme for consistent plotting
new <- theme_set(theme_bw())
theme_update(text=element_text(size=16,  family="Times New Roman"))

#### DAG ####
# The DAG is the central piece of the analysis. 
#Note that the DAG here is more for purposes of quick visualisation as ggdag's 
#DAGs are not that pretty 


theme_set(theme_dag())
tidy_dagitty(graph_Draft_Dec)
ggdag(graph_Draft_Dec, edge_type = "link_arc")

#create the DAG object
dagified <- dagify(Education ~ Conflict + Institutions + Country + Year,
                   Homophily ~ Conflict + Education + ExportsLagged + FDI + Institutions + Country + Year,
                   StructuralChange ~ TD + Conflict  + Education + ExportsLagged + FDI + Homophily + Institutions + TechProgress + Country + Year,
                   FDI ~ Education + Institutions + Country + Year,
                   TechProgress ~ Education + FDI + Institutions + Country + Year,
                   TD ~ ExportsLagged + Homophily + Institutions + TechProgress + Country + Year,
                   exposure = "TD",
                   outcome = "StructuralChange", 
                   latent = 'Homophily',
                   labels = c("Education" = "Education",
                              "StructuralChange" = "Structural\n Change",
                              "Homophily" = "Homophily/\nDemocracy",
                              "FDI" = "FDI",
                              "ExportsLagged" = "Exports\n Lagged", 
                              "Institutions" = "Institutions", 
                              "Conflict" = "Conflict", 
                              "TD" = "Tariff\n Difference", 
                              "TechProgress" = "Tech\nProgress",
                              'Country' = 'Country',
                              'Year' = "Year"))

#plot it with ggdag
ggdag(dagified, text = FALSE, use_labels = "label") 

dagified %>% ggdag_dconnected("TD", "StructuralChange", use_labels = "label", text = F)




# plot a DAG with a collider variable
dagified_techprogressCollider <- dagify(Education ~ Conflict + Institutions + Country + Year,
                                        Homophily ~ Conflict + Education + ExportsLagged + FDI + Institutions + Country + Year,
                                        StructuralChange ~ TD + Conflict  + Education + ExportsLagged + FDI + Homophily + Institutions + Country + Year,
                                        FDI ~ Education + Institutions + Country + Year,
                                        TechProgress ~ Education + FDI + Institutions + StructuralChange + TD + Country + Year,
                                        TD ~ ExportsLagged + Homophily + Institutions + Country + Year,
                                        exposure = "TD",
                                        outcome = "StructuralChange", 
                                        latent = 'Homophily',
                                        labels = c("Education" = "Education",
                                                   "StructuralChange" = "Structural\n Change",
                                                   "Homophily" = "Homophily/\nDemocracy",
                                                   "FDI" = "FDI",
                                                   "ExportsLagged" = "Exports\n Lagged", 
                                                   "Institutions" = "Institutions", 
                                                   "Conflict" = "Conflict", 
                                                   "TD" = "Tariff\n Diff", 
                                                   "TechProgress" = "Tech\nProgress",
                                                   'Country' = 'Country',
                                                   'Year' = "Year"))

ggdag(dagified_techprogressCollider, text = FALSE, use_labels = "label") 

dagified_techprogressCollider %>% ggdag_dconnected(c("TD", 'TechProgress'), "StructuralChange", use_labels = "label", text = F)


#### WITS Data ####

data <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/TariffData/DataJobID-2083378_2083378_MultiYearwithOECD.csv")

no_na_data <- drop_na(data ,c("Trade.Year","Product","Partner", "Reporter","Imports.Value.in.1000.USD", "Simple.Average"))

no_na_data$agri <- no_na_data$Product < 25

## specify koreas to north and south
no_na_data[(no_na_data$Reporter.Name == "Korea, Rep."), c("Reporter.Name")] <- "South Korea"
no_na_data[(no_na_data$Partner.Name == "Korea, Rep."), c("Partner.Name")] <- "South Korea"

no_na_data[(no_na_data$Reporter.Name == "Korea, Dem. Rep."), c("Reporter.Name")] <- "North Korea"
no_na_data[(no_na_data$Partner.Name == "Korea, Dem. Rep."), c("Partner.Name")] <- "North Korea"


master_frame <- data.frame()

year_looking_at <- 2006

Exports <- unique(no_na_data$Partner)
w_tariff_diff <- unique(no_na_data$Partner)
u_tariff_diff <- unique(no_na_data$Partner)
raw_diff <- unique(no_na_data$Partner)


country <- unique(no_na_data$Partner.Name)
country_code <- c(1:length(country))

oecd <- c("Australia", "Austria", "Belgium", "Canada", "Czech Republic", "Denmark", "Finland", "France",
          "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Japan", "South Korea", "Luxembourg", "Mexico", "Netherlands",
          "New Zealand", "Norway", "Poland", "Slovak Republic", "Spain", "Sweden", "Switzerland", "Turkey", "United Kingdom", "United States" )

master_frame <- data.frame()
for (year_looking_at in unique(no_na_data$Tariff.Year)){
  data_year <- subset(no_na_data, Tariff.Year == year_looking_at)
  time_year <-  rep(c(year_looking_at),each= length(country)) 
  
  #iterate through the countries (partner because the reporters are the ones setting the tariff)
  for (i in 1:length(country)){
    
    #take just the data that is the partner
    data_year_i <- subset(data_year, Partner.Name == country[i])
    country_code[i] <- data_year_i$Partner[1]
    
    #calculate the value of their total exports
    Exports[i] <- sum(data_year_i$Imports.Value.in.1000.USD)
    
    #set up a couple of vectors
    imp_of_oecd <- c(1:length(oecd))
    weighted_tariff_diff <- c(1:length(oecd))
    unweighted_tariff_diff <- c(1:length(oecd))
    not_weigthed <- c(1:length(oecd))
    
    for (j in 1:length(oecd)){
      
      data_year_i_j <-  subset(data_year_i, Reporter.Name == oecd[j])
      imp_of_oecd[j] <- sum(data_year_i_j$Imports.Value.in.1000.USD, na.rm = T)
      unweighted_tariff_diff <- (mean(data_year_i_j$Simple.Average[data_year_i_j$agri == F]) - mean(data_year_i_j$Simple.Average[data_year_i_j$agri == T])) * imp_of_oecd[j]
      weighted_tariff_diff[j] <- (weighted.mean(data_year_i_j$Simple.Average[data_year_i_j$agri == F], data_year_i_j$Imports.Value.in.1000.USD[data_year_i_j$agri == F]) - weighted.mean(data_year_i_j$Simple.Average[data_year_i_j$agri == T],data_year_i_j$Imports.Value.in.1000.USD[data_year_i_j$agri == T])) * imp_of_oecd[j]
      not_weigthed[j] <-  (mean(data_year_i_j$Simple.Average[data_year_i_j$agri == F]) - mean(data_year_i_j$Simple.Average[data_year_i_j$agri == T])) 
    }
    
    w_tariff_diff[i] <- sum(weighted_tariff_diff, na.rm = TRUE)/sum(imp_of_oecd, na.rm = TRUE)
    u_tariff_diff[i] <- sum(unweighted_tariff_diff, na.rm = TRUE)/sum(imp_of_oecd, na.rm = TRUE)
    raw_diff[i] <- mean(not_weigthed, na.rm = TRUE)
  }
  
  # make a master dataframe for the countries
  
  country[37] <- "Ethiopia"
  country[80] <- "Serbia"
  country[149] <- "NOT SPECIFIED_TERR"
  country[59]<- "NOT SPECIFIED_FMS"
  yearly_frame <- data.frame(country, country_code, w_tariff_diff, u_tariff_diff,Exports, raw_diff, time_year)
  colnames(yearly_frame) <- c("country", 'country_no', 'weighted_td',"unweighted_td","Exports", "TariffDiff", 'time_year')
  master_frame <- rbind(master_frame, yearly_frame)
}


master_frame$country_code <- countrycode(sourcevar = master_frame$country,
                                         origin = "country.name",
                                         destination = "iso3c")

hist(raw_diff)




#### World Bank Data #### 
wb_data <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Capstone_Country_Data/bebe260f-09bf-48cc-b041-5f3c0b55d5ef_Data.csv",
                    na.strings = "..")

#merge with master_frame
#master_merge <- merge(subset(wb_data, Time == year_looking_at), master_frame, by.x = "Country.Code", by.y = "country_code")
master_merge <- merge(wb_data, master_frame, by.x =c("Time", "Country.Code"), by.y = c("time_year", "country_code"), all.x = F, all.y = F)
shorted_headings <- c("Time",                                                                                                            
                      "Country.Code" ,                                                                                                   
                      "Country.Name",                                                                                                    
                      "Time.Code",                                                                                                       
                      "EmployAgri",                       
                      "RDexpGDP",                                             
                      "RDResearchersMilpeople",                                                     
                      "TaxGDP",                                                                      
                      "TradeGDP",                                                                
                      "TradeServicesGDP",                                                                
                      "AgriValueAddedGDP",                               
                      "GDPcurrentUS",                                                                              
                      "GDPpc",                                                                   
                      "ExpEduGDP",                                       
                      "IndustryValueAddedGDP",                                      
                      "AgriExports",                               
                      "ManuExports",                                             
                      "ReguEnv",                                  
                      "CorruptionPublic",
                      "IPpayments",                      
                      "IPreceipts",                      
                      "PropertyRights",                        
                      "PrimaryEnroll",                         
                      "SecondaryEnroll" ,                                                             
                      "TertiaryGross",                                                             
                      "JournalArticles",                                                      
                      "Country",                                                                                                        
                      "Country_no",                                                                                                      
                      "weighted_td",                                                                                                     
                      "unweighted_td",
                      "Exports",
                      "TariffDiff")    
colnames(master_merge) <- shorted_headings

master_merge$log_GDP <- log(master_merge$GDPpc)


#### Extra Covariates ####

wb_covariates <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Capstone_Country_Data/ExtraCovariate/1fff9d78-a496-494f-b79e-36b83c26efd1_Data.csv",
                          na.strings = "..")
headings_covariates <- c("Time",
                         "Time.Code",
                         "Country.Name",                                                                                                        
                         "Country.Code",
                         "FDINetInGDP", 
                         "AirTransport",    
                         "ArmsImports",    
                         "Bribery",  
                         "StartUpCostGNIpc",
                         "EduExpTertiaryofTotal",
                         "EduAttainBachelor",
                         "EduAttainDoctoral",  
                         "TaxEvasion",  
                         "FirmsWithRD",
                         "BroadbandPer100.people",
                         "FDINetInBoP",
                         "FDINetOutGDP",
                         "FDINetOutBoP",
                         "Gini",
                         "InternetPerCapita",
                         "InduDesignApp" ,
                         "InternDisplaced",
                         "TourismArrivals",
                         "TourismReceiptsExports",     
                         "ExportsHighInc",
                         "MilitaryExp",
                         "NetBilateralAidDAC", 
                         "NetODAProvidedGNI",
                         "NetODATotal",
                         "NetODARceivedGNI", 
                         "NetODAProvidedTotal",   
                         "NetODAReceivedGovExp",
                         "NetOfficialAidReceived", 
                         "PatentApps",
                         "RDExpGDP",
                         "TertiaryGross",
                         "RDperMill",
                         "TMApps")

colnames(wb_covariates) <- headings_covariates

master_merge <- merge(master_merge, wb_covariates,by =c("Time","Time.Code", "Country.Code","Country.Name"), all.x = T, all.y = F)

## get HDI from WDI and add it to the rest of the data. 

HDI <- WDI(country = "all",
           indicator = "UNDP.HDI.XD",
           start = 2006,
           end = 2020,
           extra = FALSE,
           cache = NULL)

master_merge <- merge(master_merge, HDI,
                      by.x =c("Time", "Country.Code","Country.Name"), 
                      by.y = c("year", 'iso2c', 'country'),
                      all.x = T, 
                      all.y = F)

master_merge$HDI <- master_merge$UNDP.HDI.XD


#### Cast data to panel format #### 
#format is varname_year (!!!)
master_merge <- subset(master_merge, select = -Time.Code)
master_merge <- subset(master_merge, select = -Country_no)
master_merge <- subset(master_merge, select = -Country)

melted_df <- melt(master_merge, id.vars = c("Country.Name", "Country.Code", "Time"))
master_casted <- dcast(melted_df, Country.Name +  Country.Code ~ ... + Time, value.var = "value")

#check that the number is at the right spot
names(master_casted)<-ifelse(substr(names(master_casted),1,2) %in% c("19","20"),    
                             paste(substr(names(master_casted),6,nchar(master_casted)),
                                   substr(names(master_casted),1,4),sep="_")   ,
                             names(master_casted))

master_casted <- cbind(master_casted[1:4], data.frame(sapply(master_casted[5:624], as.numeric)))

## Add differences in agricultural employment (OUTCOME VARIABLE)
master_casted$EmployAgriDiff_2008 <- (master_casted$EmployAgri_2008 - master_casted$EmployAgri_2006)*-1
master_casted$EmployAgriDiff_2010 <- (master_casted$EmployAgri_2010 - master_casted$EmployAgri_2008)*-1
master_casted$EmployAgriDiff_2012 <- (master_casted$EmployAgri_2012 - master_casted$EmployAgri_2010)*-1
master_casted$EmployAgriDiff_2014 <- (master_casted$EmployAgri_2014 - master_casted$EmployAgri_2012)*-1
master_casted$EmployAgriDiff_2015 <- (master_casted$EmployAgri_2015 - master_casted$EmployAgri_2014)*-1
master_casted$EmployAgriDiff_2016 <- (master_casted$EmployAgri_2016 - master_casted$EmployAgri_2015)*-1
master_casted$EmployAgriDiff_2017 <- (master_casted$EmployAgri_2017 - master_casted$EmployAgri_2016)*-1
master_casted$EmployAgriDiff_2018 <- (master_casted$EmployAgri_2018 - master_casted$EmployAgri_2017)*-1

# percentage change in agriculture employment 
master_casted$EmployAgriDiff_17_10 <-( master_casted$EmployAgri_2017 - master_casted$EmployAgri_2010)*-1 

## get differences to 2006 
master_casted$EmployAgriDiff_2006_2008 <- (master_casted$EmployAgri_2008 - master_casted$EmployAgri_2006)*-1
master_casted$EmployAgriDiff_2006_2010 <- (master_casted$EmployAgri_2010 - master_casted$EmployAgri_2006)*-1 
master_casted$EmployAgriDiff_2006_2012 <- (master_casted$EmployAgri_2012 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100 <- I tried using a percentage change. that did not go well.
master_casted$EmployAgriDiff_2006_2014 <- (master_casted$EmployAgri_2014 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100
master_casted$EmployAgriDiff_2006_2015 <- (master_casted$EmployAgri_2015 - master_casted$EmployAgri_2006)*-1 
master_casted$EmployAgriDiff_2006_2016 <- (master_casted$EmployAgri_2016 - master_casted$EmployAgri_2006)*-1
master_casted$EmployAgriDiff_2006_2017 <- (master_casted$EmployAgri_2017 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100
master_casted$EmployAgriDiff_2006_2018 <- (master_casted$EmployAgri_2018 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100


#### Make a world map with the tariff differentials ####
world <- ne_countries(scale = "medium", returnclass = "sf")
world_merged <-  merge(world, master_frame, by.x = "iso_a3", by.y = "country_code",all.x = F, all.y = T,  duplicateGeoms = F)
world_merged$log_td <- log(world_merged$unweighted_td + 100)
curr_year <- 2017
# gen world map
world_map_tariff_diffs <- ggplot(data = subset(world_merged, time_year == curr_year)) +
  geom_sf(aes(fill = asinh(TariffDiff))) +
  theme(legend.position="bottom") +
  scale_fill_continuous(type = "gradient", trans = "pseudo_log") +
  labs( fill = "TD") +
  ggtitle(paste("World map", curr_year))


world_map_tariff_diffs

#### Exploratory Figures ####

#Histogram of TD
hist_td_2017 <- ggplot(data = master_casted, aes(x = TariffDiff_2017)) +
  labs( x = "Tariff Differential")+
  geom_histogram()  +
  labs(title = "Tariff Differential in 2017")

hist_td_2017
mean(master_casted$TariffDiff_2017, na.rm = TRUE)
sd(master_casted$TariffDiff_2017, na.rm = TRUE)


## Scatter Log GDP per Capita against Tariff Differential
scatter_gdp_td <- ggplot(data = master_merge, aes(x = GDPpc, y = TariffDiff, text= Country.Name, frame = Time)) +
  labs( x = "GDP pc", y = "Unweighted Tariff Differential")+
  geom_point()  +
  labs(title = "Year")

scatter_gdp_td_plotly <- ggplotly(scatter_gdp_td)

#include the country name in the hover-information
scatter_gdp_td_plotly$text <- master_merge$Country.Name
scatter_gdp_td_plotly


#Scatter exports against tariff differential
master_merge$log_td_u <- log(master_merge$unweighted_td + 100)
scatter_td_exports <- ggplot(data = master_merge, aes(x = TariffDiff, y = Exports, text= Country.Name, frame = Time)) +
  labs( x = "Unweighted Tariff Differential", y ='AgriCultural Exports') +
  geom_point()  +
  abline() + 
  labs(title = "Year")

scatter_td_exports_plotly <- ggplotly(scatter_td_exports)

#include the country name in the hover-information
scatter_td_exports_plotly$text <- master_merge$Country.Name
scatter_td_exports_plotly



#Scatter change in agricultural work
employment_agri_time <- ggplot(data = master_merge, aes(x = EmployAgri, y = GDPpc, text= Country.Name, frame = Time)) +
  labs( x = "EmployAgri", y ='GDPpc') +
  geom_point() 

employment_agri_time <- ggplotly(employment_agri_time)

#include the country name in the hover-information
employment_agri_time$text <- master_merge$Country.Name

employment_agri_time



#Scatter gdp against in agricultural share
employment_agri_2017 <- ggplot(data = master_casted, aes(x = EmployAgri_2017, y = GDPpc_2017, ymax = 110000)) +
  labs( x = "Agricultural Employmnet (% of total Employment)", y ='GDP per capita ($US current)') +
  geom_point() 

employment_agri_2017 <- ggplotly(employment_agri_2017)

employment_agri_2017

#Scatter gdp against in change agricultural share
employment_agri_2017 <- ggplot(data = master_casted, aes(x = -EmployAgriDiff_2006_2017, y = GDPpc_2017, text = Country.Name, ymax = 110000)) +
  labs( x = "Change in Agricultural Employment \n(% of total Employment)", y ='GDP per capita ($US current)') +
  geom_point() 

employment_agri_2017 <- ggplotly(employment_agri_2017)

employment_agri_2017


employment_agri_GDP <- ggplot(data = master_merge, aes(x = EmployAgri, y = GDPpc, text= Country.Name, frame = Time)) +
  labs(x = "EmployAgri", y ='GDPpc') + 
  geom_point()
employment_agri_GDP <- ggplotly(employment_agri_GDP)

#include the country name in the hover-information
employment_agri_GDP$text <- master_merge$Country.Name

employment_agri_GDP



employment_agri_td <- ggplot(data = master_merge, aes(x = TariffDiff, y = EmployAgri, text= Country.Name, frame = Time)) +
  labs( x = "Tariff Difference", y ='Employment in Agriculture (%)') +
  geom_point() 

employment_agri_td <- ggplotly(employment_agri_td)

#include the country name in the hover-information
employment_agri_td$text <- master_merge$Country.Name

employment_agri_td



employment_agri_td <- ggplot(data = master_casted, aes(x = TariffDiff_2017, y = EmployAgriDiff_17_10)) +
  labs( x = "Tariff Difference", y ='%Employment in Agriculture (%)') +
  geom_point() 

employment_agri_td


#### Political Variables ####

library(plm)

## Conflict data

#Data: https://datacatalog.worldbank.org/dataset/spread-conflict-data
#More raw data from PRIO https://www.prio.org/Data/Armed-Conflict/

conflicts_data <- read_xls("/Users/johannes/Desktop/Minerva/Capstone/time_series_short_new_0.xls")
conflicts_data <- subset(conflicts_data, year >= 1990)
conflicts_data$pop_affected[which(is.na(conflicts_data$pop_affected) == TRUE)] <- 0

## fixing some labeling issues
conflicts_data$country[conflicts_data$country == "Belraus"] <- "Belarus"
conflicts_data$country[conflicts_data$country == "Korea, People's Republic of"] <- "North Korea"
conflicts_data$country[conflicts_data$country == "Korea, Republic of"] <- "South Korea"
conflicts_data$country_code <- countrycode(sourcevar = conflicts_data$country,
                                           origin = "country.name",
                                           destination = "iso3c")


#average by decades
decadal_conflict <- aggregate(pop_affected ~ country, data = conflicts_data, FUN = mean, subset = year >= 1990  & year < 2000)
colnames(decadal_conflict) <- c('country', paste('conflict', '1990', sep = "_"))

for (year_i in c(2000, 2010)){
  sub_frame <- aggregate(pop_affected ~ country, data = conflicts_data, FUN = mean, subset = year >= year_i  & year < year_i + 10)
  colnames(sub_frame) <- c('country', paste('conflict', year_i, sep = "_"))
  decadal_conflict <- merge(decadal_conflict, sub_frame, by = "country", all.x = T, all.y = T)
}

conflicts_melted <- melt(conflicts_data, id.vars = c("gwno", "country", "year"))
conflicts <- dcast(conflicts_melted, gwno + country + country_code ~ ... + year)
#check that the number is at the right spot
names(conflicts)<-ifelse(substr(names(conflicts),1,2) %in% c("19","20"),
                         paste(substr(names(conflicts),6,nchar(conflicts)),
                               substr(names(conflicts),1,4),sep="_")   ,
                         names(conflicts))

decadal_conflict$country_code <- countrycode(sourcevar = decadal_conflict$country,
                                             origin = "country.name",
                                             destination = "iso3c")


panel_merge <- merge(master_merge, conflicts_data, by.x = c("Country.Code", "Time"), by.y = c('country_code','year'), all.x = T, all.y = F)
master_casted <- merge(master_casted, decadal_conflict, by.x = "Country.Code", by.y = 'country_code', all.x = T, all.y = F)


## Polity5: Data http://www.systemicpeace.org/inscrdata.html
polity_data <- read_xls("/Users/johannes/Desktop/Minerva/Capstone/p5v2018.xls")
polity_data <- subset(polity_data, year >= 1946)

#there is cote d'ivory and ivory coast in the data set. the ivory coast has less granular data and get's deleted by this. 
polity_data$country[polity_data$country == "Ivory Coast"] <- NA


#change the polity scores to something aggregateable by the code-book: 
#http://www.systemicpeace.org/inscr/p5manualv2018.pdf
polity_data$polity[which(polity_data$polity == -66)] <- NA
polity_data$polity[which(polity_data$polity == -88)] <- NA
polity_data$polity[which(polity_data$polity == -77)] <- 0
polity_data$country_code <- countrycode(sourcevar = polity_data$country,
                                        origin = "country.name",
                                        destination = "iso3c")



decadal_polity <- aggregate(polity ~ country + country_code + scode, data = polity_data, FUN = mean, subset = year >= 1950  & year < 1950 + 10)
colnames(decadal_polity) <- c('country', 'country_code','scode', paste('polity', '1950', sep = "_"))

for (year_i in seq(1960, 2010, 10)){
  sub_frame <- aggregate(polity ~ country +country_code+ scode, data = polity_data, FUN = mean, subset = year >= year_i  & year < year_i + 10)
  colnames(sub_frame) <- c('country','country_code', 'scode', paste('polity', year_i, sep = "_"))
  decadal_polity <- merge(decadal_polity, sub_frame, by = c("country", 'country_code', "scode"), all.x = T, all.y = T)
}


decadal_polity <- drop_na(decadal_polity ,c("polity_2010"))


master_casted <- merge(master_casted, decadal_polity[c("polity_2010", 'country_code')], by.x = "Country.Code", by.y = 'country_code', all.x = T, all.y = F)
panel_merge <- merge(panel_merge, subset(polity_data[c('country_code','year','polity')], year > 2000), by.x = c("Country.Code", "Time"), by.y = c('country_code','year'), all.x = T, all.y = F)




## mean OECD polity score
mean(master_casted[master_casted$Country.Name %in% oecd, 'polity_2010'], na.rm = T)

describeBy(master_merge[c('Time',"EmployAgri",                       
                          "RDexpGDP",                                             
                          "RDResearchersMilpeople",                                                     
                          "TaxGDP",                                                                      
                          "TradeGDP",                                                                
                          "TradeServicesGDP",                                                                
                          "AgriValueAddedGDP",                               
                          "GDPcurrentUS",                                                                              
                          "GDPpc",                                                                   
                          "ExpEduGDP",                                       
                          "IndustryValueAddedGDP",                                      
                          "AgriExports",                               
                          "ManuExports",                                             
                          "ReguEnv",                                  
                          "CorruptionPublic",
                          "IPpayments",                      
                          "IPreceipts",                      
                          "PropertyRights",                        
                          "PrimaryEnroll",                         
                          "SecondaryEnroll",                                                             
                          "TertiaryGross",                                                             
                          "JournalArticles",                                                      
                          "weighted_td",                                                                                                     
                          "unweighted_td",
                          "Exports")], group = 'Time')


## construct a dataframe with the number of NAs in the Dataset
na_count <- sapply(master_casted, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)




#save dataframe to directory 
write.csv(master_casted, "merged_panel.csv")


#### Impute Data #### 

#get working dataset 
rawpanel <- read.csv("merged_panel.csv")

years_in_data <- c(2006, 2008, 2010, 2012, 2014, 2016, 2017, 2018)
variables_in_model <- sapply(years_in_data, function(x) paste0(paste("EmployAgriDiff",x,sep="_"),',', 
                                                               paste("EmployAgri",x,sep="_"),',',
                                                               paste("TariffDiff",x,sep="_") ,',',
                                                               paste("ManuExports",x,sep="_") ,',',
                                                               paste("GDPpc",x,sep="_") ,',',
                                                               paste("TaxGDP",x,sep="_") ,',',
                                                               paste("PrimaryEnroll",x,sep="_") ,',',
                                                               paste("StartUpCostGNIpc",x,sep="_"),',',
                                                               paste("PatentApps",x,sep="_"),',',
                                                               paste("FDINetInBoP",x,sep="_"),',',
                                                               'conflict_2010',',',
                                                               "polity_2010"))


for_mice <- rawpanel %>% select (Country.Code, Country.Name,conflict_2010,polity_2010,
                                 TariffDiff_2006,ManuExports_2006,GDPpc_2006,TaxGDP_2006,PrimaryEnroll_2006,StartUpCostGNIpc_2006,PatentApps_2006,FDINetInBoP_2006,
                                 EmployAgriDiff_2008,TariffDiff_2008,ManuExports_2008,GDPpc_2008,TaxGDP_2008,PrimaryEnroll_2008,StartUpCostGNIpc_2008,PatentApps_2008,FDINetInBoP_2008,
                                 EmployAgriDiff_2010,TariffDiff_2010,ManuExports_2010,GDPpc_2010,TaxGDP_2010,PrimaryEnroll_2010,StartUpCostGNIpc_2010,PatentApps_2010,FDINetInBoP_2010,
                                 EmployAgriDiff_2012,TariffDiff_2012,ManuExports_2012,GDPpc_2012,TaxGDP_2012,PrimaryEnroll_2012,StartUpCostGNIpc_2012,PatentApps_2012,FDINetInBoP_2012,
                                 EmployAgriDiff_2014,TariffDiff_2014,ManuExports_2014,GDPpc_2014,TaxGDP_2014,PrimaryEnroll_2014,StartUpCostGNIpc_2014,PatentApps_2014,FDINetInBoP_2014,
                                 EmployAgriDiff_2016,TariffDiff_2016,ManuExports_2016,GDPpc_2016,TaxGDP_2016,PrimaryEnroll_2016,StartUpCostGNIpc_2016,PatentApps_2016,FDINetInBoP_2016,
                                 EmployAgriDiff_2017,TariffDiff_2017,ManuExports_2017,GDPpc_2017,TaxGDP_2017,PrimaryEnroll_2017,StartUpCostGNIpc_2017,PatentApps_2017,FDINetInBoP_2017,
                                 EmployAgriDiff_2018,TariffDiff_2018,ManuExports_2018,GDPpc_2018,TaxGDP_2018,PrimaryEnroll_2018,StartUpCostGNIpc_2018,PatentApps_2018,FDINetInBoP_2018,
                                 EmployAgri_2006,EmployAgri_2008,EmployAgri_2010,EmployAgri_2012,EmployAgri_2014,EmployAgri_2016, EmployAgri_2017, EmployAgri_2018
)






#### Make a world map with missingness ####
world <- ne_countries(scale = "medium", returnclass = "sf")
world_missing <-  merge(world, for_mice_with_missing, by.x = "iso_a3", by.y = "Country.Code",all.x = F, all.y = T,  duplicateGeoms = F)

# gen world map
world_map_missing <- ggplot(data = world_missing) +
  geom_sf(aes(fill = n_miss_all)) +
  theme(legend.position="bottom") +
  scale_fill_continuous(type = "gradient") +
  labs( fill = "No. Missing") +
  ggtitle(paste("World map"))


world_map_missing

summary(lm(n_miss_all ~ polity_2010, for_mice_with_missing))


select(for_mice, EmployAgriDiff_2008,TariffDiff_2008,ManuExports_2006,GDPpc_2006,TaxGDP_2008,PrimaryEnroll_2008,StartUpCostGNIpc_2008,PatentApps_2008,FDINetInBoP_2008,conflict_2010,polity_2010) %>%
  missing_plot()



#### Decade Averages ####

for_mice <- for_mice[,order(colnames(for_mice))]
colnames(for_mice)

for_mice$FDI_10 <- rowMeans(for_mice[,c(21:26)], na.rm = T)
for_mice$GDP_10 <- rowMeans(for_mice[,c(29:34)], na.rm = T)
for_mice$ManuExport_10 <- rowMeans(for_mice[,c(37:42)], na.rm = T)
for_mice$Patent_10 <- rowMeans(for_mice[,c(45:50)], na.rm = T)
for_mice$PrimaryEnroll_10 <- rowMeans(for_mice[,c(54:59)], na.rm = T)
for_mice$TariffDiff_10 <- rowMeans(for_mice[,c(62:67)], na.rm = T)
for_mice$StartUp_10 <- rowMeans(for_mice[,c(70:75)], na.rm = T)
for_mice$TaxGDP_10 <- rowMeans(for_mice[,c(78:85)], na.rm = T)
for_mice$EmployAgri_00 <- rowMeans(for_mice[,c(4:5)], na.rm = T)
for_mice$EmployAgri_10 <- rowMeans(for_mice[,c(6:11)], na.rm = T)
for_mice$EmployDiff_00_10 <- (for_mice$EmployAgri_10 - for_mice$EmployAgri_00)*-1


for_mice_missingcolumns <- add_any_miss(for_mice,
                                        c(FDI_10, GDP_10, ManuExport_10, Patent_10, PrimaryEnroll_10, TariffDiff_10,StartUp_10,TaxGDP_10, EmployDiff_00_10, polity_2010, conflict_2010),
                                        label = "any_miss", missing = 0, complete = 1)
for_mice_missingcolumns <- add_any_miss(for_mice_missingcolumns,
                                        c(FDI_10, GDP_10, ManuExport_10, PrimaryEnroll_10, TariffDiff_10,StartUp_10,TaxGDP_10, EmployDiff_00_10, polity_2010, conflict_2010),
                                        label = "miss_patent", missing = 0, complete = 1)

for_mice_missingcolumns$missingness <- as_factor(for_mice_missingcolumns$any_miss_vars + for_mice_missingcolumns$miss_patent_vars)

### Summary Stats Decadal ###

out_10 <- describe(cbind(for_mice$FDI_10,
                         log(for_mice$GDP_10),
                         for_mice$ManuExport_10,
                         for_mice$Patent_10,
                         for_mice$PrimaryEnroll_10,
                         for_mice$TariffDiff_10,
                         for_mice$StartUp_10,
                         for_mice$TaxGDP_10,
                         for_mice$EmployAgri_00,
                         for_mice$EmployAgri_10,
                         for_mice$EmployDiff_00_10))

### Regs 2010s ####

decadel_reg_no_gdp <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                           FDI_10 + 
                           Patent_10 + 
                           PrimaryEnroll_10 + 
                           StartUp_10 + 
                           TaxGDP_10 + 
                           polity_2010 + 
                           conflict_2010,
                         data = for_mice)

decadel_reg <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                    log(GDP_10) +
                    TariffDiff_10 * log(GDP_10) + 
                    FDI_10 + 
                    log(GDP_10) + 
                    Patent_10 + 
                    PrimaryEnroll_10 + 
                    StartUp_10 + 
                    TaxGDP_10 + 
                    polity_2010 + 
                    conflict_2010,
                  data = for_mice)

decadel_reg_no_patent <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                              FDI_10 + 
                              log(GDP_10) +
                              PrimaryEnroll_10 + 
                              StartUp_10 + 
                              TaxGDP_10 + 
                              polity_2010 + 
                              conflict_2010,
                            data = for_mice)

decadel_outregs <- outreg(list(decadel_reg_no_gdp,decadel_reg,decadel_reg_no_patent))



outreg(decadel_reg_no_patent)


#### Inverse Probability of Treatment Weighting ####

no_na <- drop_na(for_mice, any_of(c('EmployDiff_00_10','TariffDiff_10', 'FDI_10','GDP_10', 
                                    'Patent_10', 
                                    'PrimaryEnroll_10',
                                    'StartUp_10', 
                                    'TaxGDP_10', 
                                    'polity_2010', 
                                    'conflict_2010')))

no_na$log_tariff <- asinh(no_na$TariffDiff_10)
ipw_out <- ipwpoint(TariffDiff_10, family = "gaussian", numerator = ~1, denominator = ~ FDI_10 + 
                      log(GDP_10) + 
                      Patent_10 + 
                      PrimaryEnroll_10 + 
                      StartUp_10 + 
                      TaxGDP_10 + 
                      polity_2010 + 
                      conflict_2010,data = no_na)

no_na$weights <- as.numeric(ipw_out$ipw.weights)


weight_distribution <- ggplot(data = subset(no_na, weights <10 & weights > -10), 
                              aes(x = weights)) + 
  geom_histogram(bins = 15) 

weight_distribution


### USING WeightIt rather than IPW package
## allows for plotting love plots and also for the non-parametric approach!
#calculate the weights. 
weights_average <- weightit(formula = TariffDiff_10 ~ FDI_10 + 
                              log(GDP_10) + 
                              Patent_10 + 
                              PrimaryEnroll_10 + 
                              StartUp_10 + 
                              TaxGDP_10 + 
                              polity_2010 + 
                              conflict_2010,
                            data = no_na,
                            method = 'npcbps')

#inspect the balance on covariates
love.plot(weights_average, thresholds = c(cor = .1), abs = TRUE,
          var.order = "unadjusted", line = F)

#add the weights to the dataset
no_na$cbps_weights <- weights_average$weights

#plot the weights to check for extreme weights
weight_distribution <- ggplot(data = no_na, 
                              aes(x = cbps_weights)) + 
  geom_histogram(bins = 15) 

weight_distribution

sd(no_na$cbps_weights)

#add the weights into the regression
iptw_reg <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                 log(GDP_10) +
                 TariffDiff_10 * log(GDP_10) +
                 FDI_10 + 
                 Patent_10 + 
                 PrimaryEnroll_10 + 
                 StartUp_10 + 
                 TaxGDP_10 + 
                 polity_2010 + 
                 conflict_2010,
               data =  no_na,
               weights = cbps_weights)
summary(iptw_reg)




#### Make a world map with missingness after Decadel averages ####
world <- ne_countries(scale = "medium", returnclass = "sf")
world_missing <-  merge(world, for_mice_missingcolumns, by.x = "iso_a3", by.y = "Country.Code",all.x = T, all.y = T,  duplicateGeoms = F)

# gen world map
world_map_missing <- ggplot(data = world_missing) +
  geom_sf(aes(fill = missingness)) +
  scale_fill_manual(values = c("navy", "tan", "seagreen"),
                    labels = c("Missing", "Patents Missing", "None Missing")) +
  theme(legend.position="bottom") +
  labs( fill = "Degree of Missingness") +
  ggtitle(paste("World map"))


world_map_missing

no_na_nopatent <- drop_na(for_mice, any_of(c('EmployDiff_00_10','TariffDiff_10', 'FDI_10','GDP_10', 
                                             'PrimaryEnroll_10',
                                             'StartUp_10', 
                                             'TaxGDP_10', 
                                             'polity_2010', 
                                             'conflict_2010')))

no_na_nopatent$log_tariff <- asinh(no_na_nopatent$TariffDiff_10)


weights_average_nopatent <- weightit(formula = TariffDiff_10 ~ FDI_10 + 
                              log(GDP_10) + 
                              PrimaryEnroll_10 + 
                              StartUp_10 + 
                              TaxGDP_10 + 
                              polity_2010 + 
                              conflict_2010,
                            data = no_na_nopatent,
                            method = 'npcbps')

#inspect the balance on covariates
love.plot(weights_average_nopatent, thresholds = c(cor = .1), abs = TRUE,
          var.order = "unadjusted", line = F)

#add the weights to the dataset
no_na_nopatent$cbps_weights <- weights_average_nopatent$weights

#plot the weights to check for extreme weights
weight_distribution <- ggplot(data = no_na_nopatent, 
                              aes(x = cbps_weights)) + 
  geom_histogram(bins = 15) 

weight_distribution

sd(no_na_nopatent$cbps_weights)

#add the weights into the regression
iptw_reg_nopatent <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                 log(GDP_10) +
                 TariffDiff_10 * log(GDP_10) +
                 FDI_10 + 
                 PrimaryEnroll_10 + 
                 StartUp_10 + 
                 TaxGDP_10 + 
                 polity_2010 + 
                 conflict_2010,
               data =  no_na_nopatent,
               weights = cbps_weights)
summary(iptw_reg_nopatent)


#### PANEL DATA ####

#### Panel Regressions ####

panel_long <- subset(panel_merge[c('Country.Code', 'Time', 
                                   'EmployAgri', 
                                   "TariffDiff",
                                   "GDPpc", 
                                   "TradeGDP", 
                                   "ManuExports", 
                                   "FDINetInGDP", 
                                   "PatentApps",
                                   'PrimaryEnroll',
                                   "StartUpCostGNIpc",
                                   "TaxGDP",
                                   "polity",
                                   "pop_affected")], Time < 2016)

colnames(panel_long) <- c("Country.Code","Time","EmployAgri","TariffDiff","GDPpc","TradeGDP",
                          "ManuExports","FDINetInGDP","PatentApps","PrimaryEnroll",
                          "StartUpCostGNIpc","TaxGDP","polity", "conflict")

panel_long$Country.Code <- as_factor(panel_long$Country.Code)

# raw panel regression
panel_reg <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                   TariffDiff +
                   lag(log(GDPpc), 1) +
                   I(TariffDiff*lag(log(GDPpc), 1)) +
                   lag(TradeGDP, 1) +
                   lag(ManuExports, 1) +
                   FDINetInGDP +
                   PatentApps +
                   PrimaryEnroll +
                   StartUpCostGNIpc +
                   TaxGDP +
                   polity +
                   conflict,
                 index = c('Country.Code', 'Time'), data = panel_long)

summary(panel_reg)


#### MICE ####

panel_melted <- melt(panel_long, id.vars = c("Country.Code", "Time"))
panel_wide <- dcast(panel_melted, Country.Code ~ ... + Time)
panel_wide$Country.Code <- as_factor(panel_wide$Country.Code)

names(panel_wide)<-ifelse(substr(names(panel_wide),1, 1) %in% c("19","20"),
                          paste(substr(names(panel_wide),6,nchar(panel_wide)),
                                substr(names(panel_wide),1,4),sep="_")   ,
                          names(panel_wide))

#miced_panel <- mice(panel_wide, m = 5, method = "cart")


densityplot(miced_panel)

panel_complete_wide <- complete(miced_panel)
write.csv(panel_complete_wide, "MICE_WidePanel.csv")

names(panel_complete_wide)<-ifelse(substr(names(panel_complete_wide),1,3) %in% c("pop"),
                                   paste('conflict',
                                         substr(names(panel_complete_wide),14,nchar(panel_wide)),sep="_")   ,
                                   names(panel_complete_wide))

panel_complete_long <- pivot_longer(panel_complete_wide, cols = -c('Country.Code'), names_to = c('.value', 'year'), names_sep = '_')
panel_complete_long <- data.frame(panel_complete_long)



# raw panel regression
panel_reg_mice <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                        TariffDiff +
                        lag(log(GDPpc), 1) +
                        I(TariffDiff*lag(log(GDPpc), 1)) +
                        lag(TradeGDP, 1) +
                        lag(ManuExports, 1) +
                        FDINetInGDP +
                        PatentApps +
                        PrimaryEnroll +
                        StartUpCostGNIpc +
                        TaxGDP +
                        polity +
                        conflict,
                      index = c('Country.Code', 'year'), data = panel_complete_long,
                      model = "pooling")

panel_reg_mice_yearFE <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                               TariffDiff+
                               lag(log(GDPpc), 1) +
                               I(TariffDiff*lag(log(GDPpc), 1)) +
                               lag(TradeGDP, 1) +
                               lag(ManuExports, 1) +
                               FDINetInGDP +
                               PatentApps +
                               PrimaryEnroll +
                               StartUpCostGNIpc +
                               TaxGDP +
                               polity +
                               conflict,
                             index = c('year'), data = panel_complete_long,
                             model = "pooling"
)

panel_reg_mice_countryFE <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                  TariffDiff +
                                  lag(log(GDPpc), 1) +
                                  I(TariffDiff*lag(log(GDPpc), 1)) +
                                  lag(TradeGDP, 1) +
                                  lag(ManuExports, 1) +
                                  FDINetInGDP +
                                  PatentApps +
                                  PrimaryEnroll +
                                  StartUpCostGNIpc +
                                  TaxGDP +
                                  polity +
                                  conflict,
                                index = c('Country.Code'), 
                                data = panel_complete_long,
                                model = "pooling")


#### TABLES ####
rob_se_panels <- list(sqrt(diag(vcovHC(panel_reg, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice_yearFE, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice_countryFE, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice, type = "HC1"))))
rob_se_averaged <- list(sqrt(diag(vcovHC(decadel_reg, type = "HC1"))),
                        sqrt(diag(vcovHC(iptw_reg, type = "HC1"))),
                        sqrt(diag(vcovHC(iptw_reg_nopatent, type = "HC1"))))

##  code for table 2
stargazer(panel_reg,
          panel_reg_mice_yearFE,
          panel_reg_mice_countryFE,
          panel_reg_mice,
          se = rob_se_panels,
          column.labels = c("RawData", 'MICEYear', "MICECountry", 'MICEfullFE'),
          align = T,
          type = 'html',
          notes = c('The dependent variable is the difference between the share of employment in agriculture and the lagged share of employment in agriculture value. The treatment variable tariff difference is not significant. Robust standard errors are shown in brackets.'),
          out = 'capstone_panel_regs_table.doc')

# code for table 3
stargazer(decadel_reg,
          iptw_reg,
          iptw_reg_nopatent,
          se = rob_se_averaged,
          column.labels = c("Averages", 'IPTW', "IPTW"),
          align = T,
          type = 'html',
          fontsize = 10,
          notes = c('The dependent variable is the difference between the average share of agricultural employment from 2006-2008 and to the average between 2010 and 2018. The treatment variable tariff difference is not significant. Robust standard errors are shown in brackets. '),
          out = 'capstone_imptw_regs_table.doc')

## TABLE 4
panel_reg_mice_noPatents <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                        TariffDiff +
                        lag(log(GDPpc), 1) +
                        I(TariffDiff*lag(log(GDPpc), 1)) +
                        lag(TradeGDP, 1) +
                        lag(ManuExports, 1) +
                        FDINetInGDP +
                        PrimaryEnroll +
                        StartUpCostGNIpc +
                        TaxGDP +
                        polity +
                        conflict,
                      index = c('Country.Code', 'year'), data = panel_complete_long,
                      model = "pooling")

rob_se_collider<- list(sqrt(diag(vcovHC(panel_reg_mice, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice_noPatents, type = "HC1"))))

##  code for table 4
stargazer(panel_reg_mice,
          panel_reg_mice_noPatents,
          se = rob_se_collider,
          column.labels = c("RawData", 'MICEYear', "MICECountry", 'MICEfullFE'),
          align = T,
          type = 'html',
          notes = c('The dependent variable is the difference between the share of employment in agriculture and the lagged share of employment in agriculture value. The treatment variable tariff difference is not significant. Robust standard errors are shown in brackets.'),
          out = 'capstone_panel_regs_collider.doc')



#autocorrelation check. 
acf <- acf(panel_complete_long$TariffDiff, lag.max = 10)


panel_reg_mice_withLAG <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                TariffDiff + 
                                lag(TariffDiff, 1) +
                                lag(log(GDPpc), 1) +
                                I(lag(TariffDiff, 1)*lag(log(GDPpc), 1)) +
                                lag(TradeGDP, 1) +
                                lag(ManuExports, 1) +
                                FDINetInGDP +
                                PatentApps +
                                PrimaryEnroll +
                                StartUpCostGNIpc +
                                TaxGDP +
                                polity +
                                conflict,
                              index = c('Country.Code', 'year'), data = panel_complete_long,
                              model = "pooling")
stargazer(panel_reg_mice_withLAG, type = "text")



#### IPTW for Panel ####

panel_nas <- na.exclude(panel_complete_long)


#this is working now.
iptw_mice_panel <- ipwtm(TariffDiff, family = "gaussian",numerator = ~1, denominator = ~ log(GDPpc) + 
                           TradeGDP + 
                           ManuExports + 
                           FDINetInGDP +
                           PatentApps +
                           PrimaryEnroll +
                           StartUpCostGNIpc +
                           TaxGDP +
                           polity +
                           conflict,
                         data = panel_nas,
                         id = Country.Code,
                         timevar= year,
                         corstr = "ar1",
                         type = "all")

ipw_panel_point <- ipwpoint(TariffDiff, family = "gaussian", numerator = ~1, denominator = ~ log(GDPpc) + 
                              TradeGDP + 
                              ManuExports + 
                              FDINetInGDP +
                              PatentApps +
                              PrimaryEnroll +
                              StartUpCostGNIpc +
                              TaxGDP +
                              polity +
                              conflict +
                              year +
                              Country.Code,
                            data = panel_nas)

## inspects weights
panel_nas$ipwtm <- iptw_mice_panel$ipw.weights
panel_nas$ipwpoints <- ipw_panel_point$ipw.weights

weight_hist_panel <- ggplot(data = panel_nas, aes(x = asinh(ipwpoints), fill = year)) +
  geom_density(alpha = .3)

weight_hist_panel


## IPTW REGRESSIONS

panel_reg_mice_withLAG <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                TariffDiff +  
                                lag(log(GDPpc), 1) +
                                I(TariffDiff*lag(log(GDPpc), 1)) +
                                lag(TradeGDP, 1) +
                                lag(ManuExports, 1) +
                                FDINetInGDP +
                                PatentApps +
                                PrimaryEnroll +
                                StartUpCostGNIpc +
                                TaxGDP +
                                polity +
                                conflict,
                              index = c('Country.Code', 'year'), data =panel_nas,
                              model = "pooling",
                              weights = asinh(ipwpoints))

summary(panel_reg_mice_withLAG)

## without patents to check for collider

#this is working now.
iptw_mice_panel_np <- ipwtm(TariffDiff, family = "gaussian",numerator = ~1, denominator = ~ log(GDPpc) + 
                              TradeGDP + 
                              ManuExports + 
                              FDINetInGDP +
                              PrimaryEnroll +
                              StartUpCostGNIpc +
                              TaxGDP +
                              polity +
                              conflict,
                            data = panel_nas,
                            id = Country.Code,
                            timevar= year,
                            corstr = "ar1",
                            type = "all")

ipw_panel_point_np <- ipwpoint(TariffDiff, family = "gaussian", numerator = ~1, denominator = ~ log(GDPpc) + 
                                 TradeGDP + 
                                 ManuExports + 
                                 FDINetInGDP +
                                 PrimaryEnroll +
                                 StartUpCostGNIpc +
                                 TaxGDP +
                                 polity +
                                 conflict +
                                 year +
                                 Country.Code,
                               data = panel_nas)

## inspects weights
panel_nas$ipwtm_np <- iptw_mice_panel_np$ipw.weights
panel_nas$ipwpoints_np <- ipw_panel_point_np$ipw.weights

weight_hist_panel <- ggplot(data = panel_nas, aes(x = asinh(ipwpoints_np), fill = year)) +
  geom_density(alpha = .3)

weight_hist_panel


## Checking for Collider 

panel_reg_mice_withLAG_np <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                   TariffDiff +  
                                   lag(log(GDPpc), 1) +
                                   I(TariffDiff*lag(log(GDPpc), 1)) +
                                   lag(TradeGDP, 1) +
                                   lag(ManuExports, 1) +
                                   FDINetInGDP +
                                   PrimaryEnroll +
                                   StartUpCostGNIpc +
                                   TaxGDP +
                                   polity +
                                   conflict,
                                 index = c('Country.Code', 'year'), data =panel_nas,
                                 model = "pooling",
                                 weights = asinh(ipwpoints_np))

stargazer(panel_reg_mice_withLAG_np)


