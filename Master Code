#### MASTER CAPSTONE R-CODE #### 

setwd("/Users/johannes/Desktop/Minerva/Capstone/")

#### Packages ####

library(tidyverse)
library(countrycode)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
library(ggspatial)
library(gganimate)
library(psych)
library(outreg)
library(AER)
library(plotly)
library(reshape2)
library(WDI)
library(readxl)
library(plm)
library(stargazer)
library(ggdag)
library(mice)
library(lattice)
library(naniar)
library(finalfit) 
library(ipw)
library(lmtest)
library(patchwork)
library(corrgram)

library(cobalt)
library(WeightIt)


# set the theme for consistent plotting
new <- theme_set(theme_bw())
theme_update(text=element_text(size=12,  family="Times New Roman"))


#### Intro Figures


## coffee price
#use common theme

#get the coffee prices data
coffee_prices <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Coffee Indicator prices.csv")
#convert to date
coffee_prices$datified <- as.Date(coffee_prices$Date)

#make the ggplot figure
figure_coffee_prices <- ggplot(data = coffee_prices, 
                               aes(x = datified, ymin = -20, ymax = 50)) + 
  geom_line(y = coffee_prices$Change, color = 'black') +
  #add a label every 2 years
  scale_x_date(date_breaks = "2 years", date_labels = "%Y") +
  labs(y = "Coffee Price Indicator (%âˆ† to previous month)", x = "Year") + 
  theme()

figure_coffee_prices
ggsave('figure_coffee_prices.png', figure_coffee_prices , width = 8.5, height = 6, units = 'in')


## Tariff Diff in US


avg_tariffs <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Tariffs from US on other countries.csv",
                        na.strings = "..")

colnames(avg_tariffs) <- c("Country.Name", "Country.Code","Series.Name","Series.Code", 1990, 2000, 2006, 2007, 2008,2009,2010,2011,2012,2013,2014,2015)

transpose_avg_tariff <- as.data.frame(t(as.matrix(avg_tariffs)))
numeric_subsetting <- transpose_avg_tariff[6:15,]
numeric_subsetting$V506 <- as.numeric(numeric_subsetting$V506)
numeric_subsetting$V507 <- as.numeric(numeric_subsetting$V507)
numeric_subsetting$V1 <- as.numeric(numeric_subsetting$V1)

figure_average_tariffUS <- ggplot(data = numeric_subsetting, 
                                  aes(x = V1, ymin = 5, ymax = 14)) + 
  geom_line(y = numeric_subsetting$V506, color = 'black') +
  geom_line(y = numeric_subsetting$V507, lty = 2, color = 'black') +
  scale_x_continuous(breaks=seq(0,2014,2)) + 
  labs(y = "Tariff in %", x = "Year") + 
  annotate("text", x = 2012, y = 6, label = "Agricultural Tariffs", size=6,family="Times New Roman") +
  annotate("text", x = 2012, y = 12.2, label = "Manufacturing Tariffs", size=6,family="Times New Roman") +
  theme()
figure_average_tariffUS
ggsave('figure_average_tariffUS.png', figure_average_tariffUS , width = 8.5, height = 6, units = 'in')



#### DAG ####
# The DAG is the central piece of the analysis. 
#Note that the DAG here is more for purposes of quick visualisation as ggdag's 
#DAGs are not that pretty 

theme_set(theme_dag())
#create the DAG object
dagified <- dagify(Education ~ Conflict + Institutions + GDP + Country + Year,
                   Homophily ~ Conflict + Education + ExportsLagged + FDI + GDP + Institutions + Country + Year,
                   StructuralChange ~ TD + Conflict  + Education + ExportsLagged + FDI + GDP + Homophily + Institutions + TechProgress + Country + Year,
                   FDI ~ Education + Institutions +  GDP + Country + Year,
                   TechProgress ~ Education + FDI + Institutions + GDP + Country + Year,
                   TD ~ ExportsLagged + Homophily + Institutions + TechProgress + GDP + Country + Year,
                   exposure = "TD",
                   outcome = "StructuralChange", 
                   latent = 'Homophily',
                   labels = c("Education" = "Education",
                              "StructuralChange" = "Structural\n Change",
                              "Homophily" = "Homophily/\nDemocracy",
                              "FDI" = "FDI",
                              "ExportsLagged" = "Exports\n Lagged", 
                              "Institutions" = "Institutions", 
                              "Conflict" = "Conflict", 
                              "TD" = "Tariff\n Difference", 
                              "TechProgress" = "Tech\nProgress",
                              'Country' = 'Country',
                              'Year' = "Year",
                              'GDP' = 'GDP p.c\n Lagged'))

#plot it with ggdag
ggdag(dagified, text = FALSE, use_labels = "label") 

master_dag <- dagified %>% ggdag_dconnected("TD", "StructuralChange", use_labels = "label", text = F)
master_dag
ggsave('master_dag.png', master_dag , width = 10.5, height = 6, units = 'in')



# plot a DAG with a collider variable
dagified_techprogressCollider <- dagify(Education ~ Conflict + Institutions + Country + Year + GDP,
                                        Homophily ~ Conflict + Education + ExportsLagged + FDI + Institutions  + GDP + Country + Year,
                                        StructuralChange ~ TD + Conflict  + Education + ExportsLagged + FDI + Homophily + Institutions + GDP + Country + Year,
                                        FDI ~ Education + Institutions + Country + GDP + Year,
                                        TechProgress ~ Education + FDI + Institutions + StructuralChange + TD + GDP + Country + Year,
                                        TD ~ ExportsLagged + Homophily + Institutions  + GDP + Country + Year,
                                        exposure = "TD",
                                        outcome = "StructuralChange", 
                                        latent = 'Homophily',
                                        labels = c("Education" = "Education",
                                                   "StructuralChange" = "Structural\n Change",
                                                   "Homophily" = "Homophily/\nDemocracy",
                                                   "FDI" = "FDI",
                                                   "ExportsLagged" = "Exports\n Lagged", 
                                                   "Institutions" = "Institutions", 
                                                   "Conflict" = "Conflict", 
                                                   "TD" = "Tariff\n Diff", 
                                                   "TechProgress" = "Tech\nProgress",
                                                   'Country' = 'Country',
                                                   'Year' = "Year",
                                                   'GDP' = 'GDP p.c\n Lagged'))


dags_collider <- dagified_techprogressCollider %>% ggdag_dconnected(c("TD", 'TechProgress'), "StructuralChange", use_labels = "label", text = F)

dags_collider
ggsave('dags_collider.png', dags_collider , width = 10.5, height = 6, units = 'in')



#### Growth vs. Manufacturing Chart ####
growthvmanu <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Growth_Manufacturing_WB_2010_2020/Growth_Manufacturing_Data.csv",
                        na.strings = "..")

#country code package allows for getting regions/continents from 
#country codes/names
growthvmanu$region <- countrycode(sourcevar = growthvmanu$Country.Name,
                                  origin = "country.name",
                                  destination = "region")
colnames(growthvmanu)

#take the differences 
#possibly extend this by grouping by region and plotting the differences over time
#similar to how they do it in Herrendorf et. al. 2014
growthvmanu$delta_manu <- growthvmanu[,55] - growthvmanu[,50]
growthvmanu$delta_growth <- growthvmanu[,53] - growthvmanu[,48]


#make ggplot2 object, exclude the grouped stats. 
growthmanu <- ggplot(data = growthvmanu[0:217,], 
                     aes( y = delta_growth,
                          x = delta_manu, 
                          color=region, 
                          text = Country.Name)) + 
  theme(legend.position = 'bottom',
        legend.box = "vertical")+
  scale_color_discrete(name = "Region")+
  #set the axis
  labs(y = "Change in GDP Growth (%)", x = "Change in Growth in Manufacturing\n(%-points)") +
  ylim(-5, 5) +
  geom_point()

growthmanu
ggsave('growthmanu.png', growthmanu , width = 8.5, height = 6, units = 'in')



#### WITS Data ####
new <- theme_set(theme_bw())
theme_update(text=element_text(size=12,  family="Times New Roman"))

data <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/TariffData/DataJobID-2083378_2083378_MultiYearwithOECD.csv")

no_na_data <- drop_na(data ,c("Trade.Year","Product","Partner", "Reporter","Imports.Value.in.1000.USD", "Simple.Average"))

no_na_data$agri <- no_na_data$Product < 25

## specify koreas to north and south
no_na_data[(no_na_data$Reporter.Name == "Korea, Rep."), c("Reporter.Name")] <- "South Korea"
no_na_data[(no_na_data$Partner.Name == "Korea, Rep."), c("Partner.Name")] <- "South Korea"

no_na_data[(no_na_data$Reporter.Name == "Korea, Dem. Rep."), c("Reporter.Name")] <- "North Korea"
no_na_data[(no_na_data$Partner.Name == "Korea, Dem. Rep."), c("Partner.Name")] <- "North Korea"


master_frame <- data.frame()

year_looking_at <- 2006

Exports <- unique(no_na_data$Partner)
w_tariff_diff <- unique(no_na_data$Partner)
u_tariff_diff <- unique(no_na_data$Partner)
raw_diff <- unique(no_na_data$Partner)


country <- unique(no_na_data$Partner.Name)
country_code <- c(1:length(country))

oecd <- c("Australia", "Austria", "Belgium", "Canada", "Czech Republic", "Denmark", "Finland", "France",
          "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Japan", "South Korea", "Luxembourg", "Mexico", "Netherlands",
          "New Zealand", "Norway", "Poland", "Slovak Republic", "Spain", "Sweden", "Switzerland", "Turkey", "United Kingdom", "United States" )

master_frame <- data.frame()
for (year_looking_at in unique(no_na_data$Tariff.Year)){
  data_year <- subset(no_na_data, Tariff.Year == year_looking_at)
  time_year <-  rep(c(year_looking_at),each= length(country)) 
  
  #iterate through the countries (partner because the reporters are the ones setting the tariff)
  for (i in 1:length(country)){
    
    #take just the data that is the partner
    data_year_i <- subset(data_year, Partner.Name == country[i])
    country_code[i] <- data_year_i$Partner[1]
    
    #calculate the value of their total exports
    Exports[i] <- sum(data_year_i$Imports.Value.in.1000.USD)
    
    #set up a couple of vectors
    imp_of_oecd <- c(1:length(oecd))
    weighted_tariff_diff <- c(1:length(oecd))
    unweighted_tariff_diff <- c(1:length(oecd))
    not_weigthed <- c(1:length(oecd))
    
    for (j in 1:length(oecd)){
      
      data_year_i_j <-  subset(data_year_i, Reporter.Name == oecd[j])
      imp_of_oecd[j] <- sum(data_year_i_j$Imports.Value.in.1000.USD, na.rm = T)
      unweighted_tariff_diff <- (mean(data_year_i_j$Simple.Average[data_year_i_j$agri == F]) - mean(data_year_i_j$Simple.Average[data_year_i_j$agri == T])) * imp_of_oecd[j]
      weighted_tariff_diff[j] <- (weighted.mean(data_year_i_j$Simple.Average[data_year_i_j$agri == F], data_year_i_j$Imports.Value.in.1000.USD[data_year_i_j$agri == F]) - weighted.mean(data_year_i_j$Simple.Average[data_year_i_j$agri == T],data_year_i_j$Imports.Value.in.1000.USD[data_year_i_j$agri == T])) * imp_of_oecd[j]
      not_weigthed[j] <-  (mean(data_year_i_j$Simple.Average[data_year_i_j$agri == F]) - mean(data_year_i_j$Simple.Average[data_year_i_j$agri == T])) 
    }
    
    w_tariff_diff[i] <- sum(weighted_tariff_diff, na.rm = TRUE)/sum(imp_of_oecd, na.rm = TRUE)
    u_tariff_diff[i] <- sum(unweighted_tariff_diff, na.rm = TRUE)/sum(imp_of_oecd, na.rm = TRUE)
    raw_diff[i] <- mean(not_weigthed, na.rm = TRUE)
  }
  
  # make a master dataframe for the countries
  
  country[37] <- "Ethiopia"
  country[80] <- "Serbia"
  country[149] <- "NOT SPECIFIED_TERR"
  country[59]<- "NOT SPECIFIED_FMS"
  yearly_frame <- data.frame(country, country_code, w_tariff_diff, u_tariff_diff,Exports, raw_diff, time_year)
  colnames(yearly_frame) <- c("country", 'country_no', 'weighted_td',"unweighted_td","Exports", "TariffDiff", 'time_year')
  master_frame <- rbind(master_frame, yearly_frame)
}


master_frame$country_code <- countrycode(sourcevar = master_frame$country,
                                         origin = "country.name",
                                         destination = "iso3c")

hist(raw_diff)




#### World Bank Data #### 
wb_data <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Capstone_Country_Data/bebe260f-09bf-48cc-b041-5f3c0b55d5ef_Data.csv",
                    na.strings = "..")

#merge with master_frame
#master_merge <- merge(subset(wb_data, Time == year_looking_at), master_frame, by.x = "Country.Code", by.y = "country_code")
master_merge <- merge(wb_data, master_frame, by.x =c("Time", "Country.Code"), by.y = c("time_year", "country_code"), all.x = F, all.y = F)
shorted_headings <- c("Time",                                                                                                            
                      "Country.Code" ,                                                                                                   
                      "Country.Name",                                                                                                    
                      "Time.Code",                                                                                                       
                      "EmployAgri",                       
                      "RDexpGDP",                                             
                      "RDResearchersMilpeople",                                                     
                      "TaxGDP",                                                                      
                      "TradeGDP",                                                                
                      "TradeServicesGDP",                                                                
                      "AgriValueAddedGDP",                               
                      "GDPcurrentUS",                                                                              
                      "GDPpc",                                                                   
                      "ExpEduGDP",                                       
                      "IndustryValueAddedGDP",                                      
                      "AgriExports",                               
                      "ManuExports",                                             
                      "ReguEnv",                                  
                      "CorruptionPublic",
                      "IPpayments",                      
                      "IPreceipts",                      
                      "PropertyRights",                        
                      "PrimaryEnroll",                         
                      "SecondaryEnroll" ,                                                             
                      "TertiaryGross",                                                             
                      "JournalArticles",                                                      
                      "Country",                                                                                                        
                      "Country_no",                                                                                                      
                      "weighted_td",                                                                                                     
                      "unweighted_td",
                      "Exports",
                      "TariffDiff")    
colnames(master_merge) <- shorted_headings

master_merge$log_GDP <- log(master_merge$GDPpc)


#### Extra Covariates ####

wb_covariates <- read.csv("/Users/johannes/Desktop/Minerva/Capstone/Capstone_Country_Data/ExtraCovariate/1fff9d78-a496-494f-b79e-36b83c26efd1_Data.csv",
                          na.strings = "..")
headings_covariates <- c("Time",
                         "Time.Code",
                         "Country.Name",                                                                                                        
                         "Country.Code",
                         "FDINetInGDP", 
                         "AirTransport",    
                         "ArmsImports",    
                         "Bribery",  
                         "StartUpCostGNIpc",
                         "EduExpTertiaryofTotal",
                         "EduAttainBachelor",
                         "EduAttainDoctoral",  
                         "TaxEvasion",  
                         "FirmsWithRD",
                         "BroadbandPer100.people",
                         "FDINetInBoP",
                         "FDINetOutGDP",
                         "FDINetOutBoP",
                         "Gini",
                         "InternetPerCapita",
                         "InduDesignApp" ,
                         "InternDisplaced",
                         "TourismArrivals",
                         "TourismReceiptsExports",     
                         "ExportsHighInc",
                         "MilitaryExp",
                         "NetBilateralAidDAC", 
                         "NetODAProvidedGNI",
                         "NetODATotal",
                         "NetODARceivedGNI", 
                         "NetODAProvidedTotal",   
                         "NetODAReceivedGovExp",
                         "NetOfficialAidReceived", 
                         "PatentApps",
                         "RDExpGDP",
                         "TertiaryGross",
                         "RDperMill",
                         "TMApps")

colnames(wb_covariates) <- headings_covariates

master_merge <- merge(master_merge, wb_covariates,by =c("Time","Time.Code", "Country.Code","Country.Name"), all.x = T, all.y = F)

## get HDI from WDI and add it to the rest of the data. 

HDI <- WDI(country = "all",
           indicator = "UNDP.HDI.XD",
           start = 2006,
           end = 2020,
           extra = FALSE,
           cache = NULL)

master_merge <- merge(master_merge, HDI,
                      by.x =c("Time", "Country.Code","Country.Name"), 
                      by.y = c("year", 'iso2c', 'country'),
                      all.x = T, 
                      all.y = F)

master_merge$HDI <- master_merge$UNDP.HDI.XD


#### Cast data to panel format #### 
#format is varname_year (!!!)
master_merge <- subset(master_merge, select = -Time.Code)
master_merge <- subset(master_merge, select = -Country_no)
master_merge <- subset(master_merge, select = -Country)

melted_df <- melt(master_merge, id.vars = c("Country.Name", "Country.Code", "Time"))
master_casted <- dcast(melted_df, Country.Name +  Country.Code ~ ... + Time, value.var = "value")

#check that the number is at the right spot
names(master_casted)<-ifelse(substr(names(master_casted),1,2) %in% c("19","20"),    
                             paste(substr(names(master_casted),6,nchar(master_casted)),
                                   substr(names(master_casted),1,4),sep="_")   ,
                             names(master_casted))

master_casted <- cbind(master_casted[1:4], data.frame(sapply(master_casted[5:624], as.numeric)))

## Add differences in agricultural employment (OUTCOME VARIABLE)
master_casted$EmployAgriDiff_2008 <- (master_casted$EmployAgri_2008 - master_casted$EmployAgri_2006)*-1
master_casted$EmployAgriDiff_2010 <- (master_casted$EmployAgri_2010 - master_casted$EmployAgri_2008)*-1
master_casted$EmployAgriDiff_2012 <- (master_casted$EmployAgri_2012 - master_casted$EmployAgri_2010)*-1
master_casted$EmployAgriDiff_2014 <- (master_casted$EmployAgri_2014 - master_casted$EmployAgri_2012)*-1
master_casted$EmployAgriDiff_2015 <- (master_casted$EmployAgri_2015 - master_casted$EmployAgri_2014)*-1
master_casted$EmployAgriDiff_2016 <- (master_casted$EmployAgri_2016 - master_casted$EmployAgri_2015)*-1
master_casted$EmployAgriDiff_2017 <- (master_casted$EmployAgri_2017 - master_casted$EmployAgri_2016)*-1
master_casted$EmployAgriDiff_2018 <- (master_casted$EmployAgri_2018 - master_casted$EmployAgri_2017)*-1

# percentage change in agriculture employment 
master_casted$EmployAgriDiff_17_10 <-( master_casted$EmployAgri_2017 - master_casted$EmployAgri_2010)*-1 

## get differences to 2006 
master_casted$EmployAgriDiff_2006_2008 <- (master_casted$EmployAgri_2008 - master_casted$EmployAgri_2006)*-1
master_casted$EmployAgriDiff_2006_2010 <- (master_casted$EmployAgri_2010 - master_casted$EmployAgri_2006)*-1 
master_casted$EmployAgriDiff_2006_2012 <- (master_casted$EmployAgri_2012 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100 <- I tried using a percentage change. that did not go well.
master_casted$EmployAgriDiff_2006_2014 <- (master_casted$EmployAgri_2014 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100
master_casted$EmployAgriDiff_2006_2015 <- (master_casted$EmployAgri_2015 - master_casted$EmployAgri_2006)*-1 
master_casted$EmployAgriDiff_2006_2016 <- (master_casted$EmployAgri_2016 - master_casted$EmployAgri_2006)*-1
master_casted$EmployAgriDiff_2006_2017 <- (master_casted$EmployAgri_2017 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100
master_casted$EmployAgriDiff_2006_2018 <- (master_casted$EmployAgri_2018 - master_casted$EmployAgri_2006)*-1 #/master_casted$EmployAgri_2006*100


#### Make a world map with the tariff differentials ####
world <- ne_countries(scale = "medium", returnclass = "sf")
world_merged <-  merge(world, master_frame, by.x = "iso_a3", by.y = "country_code",all.x = F, all.y = T,  duplicateGeoms = F)
world_merged$log_td <- log(world_merged$unweighted_td + 100)
curr_year <- 2012
# gen world map
world_map_tariff_diffs <- ggplot(data = subset(world_merged, time_year == curr_year)) +
  geom_sf(aes(fill = asinh(TariffDiff))) +
  theme(legend.position="bottom") +
  scale_fill_continuous(type = "gradient", trans = "pseudo_log") +
  labs( fill = "Tariff Difference\n(inverse hyperbolic sine)")


world_map_tariff_diffs

ggsave('world_map_tariff_diffs.png', world_map_tariff_diffs , width = 8.5, height = 6, units = 'in')



#### Exploratory Figures ####

#Histogram of TD
hist_td_2012 <- ggplot(data = master_casted, aes(x = TariffDiff_2012)) +
  labs( x = "Tariff Differential")+
  geom_histogram()  +
  theme()

hist_td_2012
ggsave('hist_td_2012.png', hist_td_2015 , width = 8.5, height = 6, units = 'in')



mean(master_casted$TariffDiff_2012, na.rm = TRUE)
sd(master_casted$TariffDiff_2012, na.rm = TRUE)


## Scatter Log GDP per Capita against Tariff Differential
scatter_gdp_td <- ggplot(data = master_merge, aes(x = GDPpc, y = TariffDiff, text= Country.Name, frame = Time)) +
  labs( x = "GDP pc", y = "Unweighted Tariff Differential")+
  geom_point()  +
  labs(title = "Year")

scatter_gdp_td_plotly <- ggplotly(scatter_gdp_td)

#include the country name in the hover-information
scatter_gdp_td_plotly$text <- master_merge$Country.Name
scatter_gdp_td_plotly


#Scatter exports against tariff differential
master_merge$log_td_u <- log(master_merge$unweighted_td + 100)
scatter_td_exports <- ggplot(data = master_merge, aes(x = TariffDiff, y = Exports, text= Country.Name, frame = Time)) +
  labs( x = "Unweighted Tariff Differential", y ='AgriCultural Exports') +
  geom_point()  +
  abline() + 
  labs(title = "Year")

scatter_td_exports_plotly <- ggplotly(scatter_td_exports)

#include the country name in the hover-information
scatter_td_exports_plotly$text <- master_merge$Country.Name
scatter_td_exports_plotly



#Scatter change in agricultural work
employment_agri_time <- ggplot(data = master_merge, aes(x = EmployAgri, y = GDPpc, text= Country.Name, frame = Time)) +
  labs( x = "EmployAgri", y ='GDPpc') +
  geom_point() 

employment_agri_time <- ggplotly(employment_agri_time)

#include the country name in the hover-information
employment_agri_time$text <- master_merge$Country.Name

employment_agri_time



#Scatter gdp against in agricultural share
employment_agri_2017 <- ggplot(data = master_casted, aes(x = EmployAgri_2017, y = GDPpc_2017)) +
  labs( x = "Agricultural Employmnet (% of total Employment)", y ='GDP per capita ($US current)') +
  ylim(0, 110100) +
  geom_point() +
  theme()

employment_agri_2017
ggsave('employment_agri_2017.png', employment_agri_2017 , width = 8.5, height = 6, units = 'in')




#Scatter gdp against in change agricultural share
employment_agri_change <- ggplot(data = master_casted, aes(x = -EmployAgriDiff_2006_2017, y = GDPpc_2017, text = Country.Name, ymax = 110000)) +
  labs( x = "Change in Agricultural Employment \n(% of total Employment)", y ='GDP per capita ($US current)') +
  geom_point() +
  ylim(0, 110100)

employment_agri_change
ggsave('employment_agri_change.png', employment_agri_change , width = 8.5, height = 6, units = 'in')





employment_agri_GDP <- ggplot(data = master_merge, aes(x = EmployAgri, y = GDPpc, text= Country.Name, frame = Time)) +
  labs(x = "EmployAgri", y ='GDPpc') + 
  geom_point()
employment_agri_GDP <- ggplotly(employment_agri_GDP)

#include the country name in the hover-information
employment_agri_GDP$text <- master_merge$Country.Name

employment_agri_GDP



employment_agri_td <- ggplot(data = master_merge, aes(x = TariffDiff, y = EmployAgri, text= Country.Name, frame = Time)) +
  labs( x = "Tariff Difference", y ='Employment in Agriculture (%)') +
  geom_point() 

employment_agri_td <- ggplotly(employment_agri_td)

#include the country name in the hover-information
employment_agri_td$text <- master_merge$Country.Name

employment_agri_td



employment_agri_td <- ggplot(data = master_casted, aes(x = TariffDiff_2017, y = EmployAgriDiff_17_10)) +
  labs( x = "Tariff Difference", y ='%Employment in Agriculture (%)') +
  geom_point() 

employment_agri_td


#### Political Variables ####

## Conflict data

#Data: https://datacatalog.worldbank.org/dataset/spread-conflict-data
#More raw data from PRIO https://www.prio.org/Data/Armed-Conflict/

conflicts_data <- read_xls("/Users/johannes/Desktop/Minerva/Capstone/time_series_short_new_0.xls")
conflicts_data <- subset(conflicts_data, year >= 1990)
conflicts_data$pop_affected[which(is.na(conflicts_data$pop_affected) == TRUE)] <- 0

## fixing some labeling issues
conflicts_data$country[conflicts_data$country == "Belraus"] <- "Belarus"
conflicts_data$country[conflicts_data$country == "Korea, People's Republic of"] <- "North Korea"
conflicts_data$country[conflicts_data$country == "Korea, Republic of"] <- "South Korea"
conflicts_data$country_code <- countrycode(sourcevar = conflicts_data$country,
                                           origin = "country.name",
                                           destination = "iso3c")


#average by decades
decadal_conflict <- aggregate(pop_affected ~ country, data = conflicts_data, FUN = mean, subset = year >= 1990  & year < 2000)
colnames(decadal_conflict) <- c('country', paste('conflict', '1990', sep = "_"))

for (year_i in c(2000, 2010)){
  sub_frame <- aggregate(pop_affected ~ country, data = conflicts_data, FUN = mean, subset = year >= year_i  & year < year_i + 10)
  colnames(sub_frame) <- c('country', paste('conflict', year_i, sep = "_"))
  decadal_conflict <- merge(decadal_conflict, sub_frame, by = "country", all.x = T, all.y = T)
}

#conflicts_melted <- melt(conflicts_data, id.vars = c("gwno", "country", "year"))
#conflicts <- dcast(conflicts_melted, gwno + country + country_code ~ ... + year)
##check that the number is at the right spot
#names(conflicts)<-ifelse(substr(names(conflicts),1,2) %in% c("19","20"),
#                         paste(substr(names(conflicts),6,nchar(conflicts)),
#                               substr(names(conflicts),1,4),sep="_")   ,
#                         names(conflicts))

decadal_conflict$country_code <- countrycode(sourcevar = decadal_conflict$country,
                                             origin = "country.name",
                                             destination = "iso3c")


panel_merge <- merge(master_merge, conflicts_data, by.x = c("Country.Code", "Time"), by.y = c('country_code','year'), all.x = T, all.y = F)
master_casted <- merge(master_casted, decadal_conflict, by.x = "Country.Code", by.y = 'country_code', all.x = T, all.y = F)


## Polity5: Data http://www.systemicpeace.org/inscrdata.html
polity_data <- read_xls("/Users/johannes/Desktop/Minerva/Capstone/p5v2018.xls")
polity_data <- subset(polity_data, year >= 1946)

#there is cote d'ivory and ivory coast in the data set. the ivory coast has less granular data and get's deleted by this. 
polity_data$country[polity_data$country == "Ivory Coast"] <- NA


#change the polity scores to something aggregateable by the code-book: 
#http://www.systemicpeace.org/inscr/p5manualv2018.pdf
polity_data$polity[which(polity_data$polity == -66)] <- NA
polity_data$polity[which(polity_data$polity == -88)] <- NA
polity_data$polity[which(polity_data$polity == -77)] <- 0
polity_data$country_code <- countrycode(sourcevar = polity_data$country,
                                        origin = "country.name",
                                        destination = "iso3c")



decadal_polity <- aggregate(polity ~ country + country_code + scode, data = polity_data, FUN = mean, subset = year >= 1950  & year < 1950 + 10)
colnames(decadal_polity) <- c('country', 'country_code','scode', paste('polity', '1950', sep = "_"))

for (year_i in seq(1960, 2010, 10)){
  sub_frame <- aggregate(polity ~ country +country_code+ scode, data = polity_data, FUN = mean, subset = year >= year_i  & year < year_i + 10)
  colnames(sub_frame) <- c('country','country_code', 'scode', paste('polity', year_i, sep = "_"))
  decadal_polity <- merge(decadal_polity, sub_frame, by = c("country", 'country_code', "scode"), all.x = T, all.y = T)
}


decadal_polity <- drop_na(decadal_polity ,c("polity_2010"))


master_casted <- merge(master_casted, decadal_polity[c("polity_2010", 'country_code')], by.x = "Country.Code", by.y = 'country_code', all.x = T, all.y = F)
panel_merge <- merge(panel_merge, subset(polity_data[c('country_code','year','polity')], year > 2000), by.x = c("Country.Code", "Time"), by.y = c('country_code','year'), all.x = T, all.y = F)




## mean OECD polity score
mean(master_casted[master_casted$Country.Name %in% oecd, 'polity_2010'], na.rm = T)


## construct a dataframe with the number of NAs in the Dataset
na_count <- sapply(master_casted, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)




#save dataframe to directory 
write.csv(master_casted, "merged_panel.csv")


#### Impute Data #### 

#get working dataset 
rawpanel <- read.csv("merged_panel.csv")

years_in_data <- c(2006, 2008, 2010, 2012, 2014, 2016, 2017, 2018)
variables_in_model <- sapply(years_in_data, function(x) paste0(paste("EmployAgriDiff",x,sep="_"),',', 
                                                               paste("EmployAgri",x,sep="_"),',',
                                                               paste("TariffDiff",x,sep="_") ,',',
                                                               paste("ManuExports",x,sep="_") ,',',
                                                               paste("GDPpc",x,sep="_") ,',',
                                                               paste("TaxGDP",x,sep="_") ,',',
                                                               paste("PrimaryEnroll",x,sep="_") ,',',
                                                               paste("StartUpCostGNIpc",x,sep="_"),',',
                                                               paste("PatentApps",x,sep="_"),',',
                                                               paste("FDINetInGDP",x,sep="_"),',',
                                                               'conflict_2010',',',
                                                               "polity_2010"))


for_mice <- rawpanel %>% select (Country.Code, Country.Name,conflict_2010,polity_2010,
                                 TariffDiff_2006,ManuExports_2006,GDPpc_2006,TaxGDP_2006,PrimaryEnroll_2006,StartUpCostGNIpc_2006,PatentApps_2006,FDINetInGDP_2006,
                                 EmployAgriDiff_2008,TariffDiff_2008,ManuExports_2008,GDPpc_2008,TaxGDP_2008,PrimaryEnroll_2008,StartUpCostGNIpc_2008,PatentApps_2008,FDINetInGDP_2008,
                                 EmployAgriDiff_2010,TariffDiff_2010,ManuExports_2010,GDPpc_2010,TaxGDP_2010,PrimaryEnroll_2010,StartUpCostGNIpc_2010,PatentApps_2010,FDINetInGDP_2010,
                                 EmployAgriDiff_2012,TariffDiff_2012,ManuExports_2012,GDPpc_2012,TaxGDP_2012,PrimaryEnroll_2012,StartUpCostGNIpc_2012,PatentApps_2012,FDINetInGDP_2012,
                                 EmployAgriDiff_2014,TariffDiff_2014,ManuExports_2014,GDPpc_2014,TaxGDP_2014,PrimaryEnroll_2014,StartUpCostGNIpc_2014,PatentApps_2014,FDINetInGDP_2014,
                                 EmployAgriDiff_2016,TariffDiff_2016,ManuExports_2016,GDPpc_2016,TaxGDP_2016,PrimaryEnroll_2016,StartUpCostGNIpc_2016,PatentApps_2016,FDINetInGDP_2016,
                                 EmployAgriDiff_2017,TariffDiff_2017,ManuExports_2017,GDPpc_2017,TaxGDP_2017,PrimaryEnroll_2017,StartUpCostGNIpc_2017,PatentApps_2017,FDINetInGDP_2017,
                                 EmployAgriDiff_2018,TariffDiff_2018,ManuExports_2018,GDPpc_2018,TaxGDP_2018,PrimaryEnroll_2018,StartUpCostGNIpc_2018,PatentApps_2018,FDINetInGDP_2018,
                                 EmployAgri_2006,EmployAgri_2008,EmployAgri_2010,EmployAgri_2012,EmployAgri_2014,EmployAgri_2016, EmployAgri_2017, EmployAgri_2018
)






#### Make a world map with missingness ####
for_mice_with_missing <- for_mice
for_mice_with_missing$n_miss_all <- apply(for_mice_with_missing, 1, function(x) sum(is.na(x)))

world <- ne_countries(scale = "medium", returnclass = "sf")
world_missing <-  merge(world, for_mice_with_missing, by.x = "iso_a3", by.y = "Country.Code",all.x = F, all.y = T,  duplicateGeoms = F)

# gen world map
world_map_missing <- ggplot(data = world_missing) +
  geom_sf(aes(fill = n_miss_all)) +
  theme(legend.position="bottom") +
  scale_fill_continuous(type = "gradient") +
  labs( fill = "Number of missing values in observation")


world_map_missing

ggsave('world_map_missing.png',world_map_missing, width = 8.5, height = 6, units = 'in')

summary(lm(asinh(n_miss_all) ~ log(polity_2010) + log(GDPpc_2016), for_mice_with_missing))


select(for_mice, EmployAgriDiff_2008,TariffDiff_2008,ManuExports_2006,GDPpc_2006,TaxGDP_2008,PrimaryEnroll_2008,StartUpCostGNIpc_2008,PatentApps_2008,FDINetInGDP_2008,conflict_2010,polity_2010) %>%
  missing_plot()



#### Decade Averages ####

for_mice <- for_mice[,order(colnames(for_mice))]
colnames(for_mice)

for_mice$FDI_10 <- rowMeans(for_mice[,c("FDINetInGDP_2010","FDINetInGDP_2012","FDINetInGDP_2014","FDINetInGDP_2016","FDINetInGDP_2017","FDINetInGDP_2018")], na.rm = T)
for_mice$GDP_10 <- rowMeans(for_mice[,c("GDPpc_2010","GDPpc_2012","GDPpc_2014","GDPpc_2016","GDPpc_2017","GDPpc_2018")], na.rm = T)
for_mice$ManuExport_10 <- rowMeans(for_mice[,c("ManuExports_2010","ManuExports_2012","ManuExports_2014","ManuExports_2016","ManuExports_2017","ManuExports_2018")], na.rm = T)
for_mice$Patent_10 <- rowMeans(for_mice[,c("PatentApps_2010","PatentApps_2012","PatentApps_2014","PatentApps_2016","PatentApps_2017","PatentApps_2018")], na.rm = T)
for_mice$PrimaryEnroll_10 <- rowMeans(for_mice[,c("PrimaryEnroll_2010","PrimaryEnroll_2012","PrimaryEnroll_2014","PrimaryEnroll_2016","PrimaryEnroll_2017","PrimaryEnroll_2018")], na.rm = T)
for_mice$StartUp_10 <- rowMeans(for_mice[,c("StartUpCostGNIpc_2010","StartUpCostGNIpc_2012", "StartUpCostGNIpc_2014", "StartUpCostGNIpc_2016","StartUpCostGNIpc_2017","StartUpCostGNIpc_2018" )], na.rm = T)
for_mice$TariffDiff_10 <- rowMeans(for_mice[,c("TariffDiff_2010","TariffDiff_2012","TariffDiff_2014","TariffDiff_2016","TariffDiff_2017","TariffDiff_2018")], na.rm = T)
for_mice$TaxGDP_10 <- rowMeans(for_mice[,c("TaxGDP_2010","TaxGDP_2012","TaxGDP_2014","TaxGDP_2016","TaxGDP_2017","TaxGDP_2018" )], na.rm = T)
for_mice$EmployAgri_00 <- rowMeans(for_mice[,c("EmployAgri_2006","EmployAgri_2008")], na.rm = T)
for_mice$EmployAgri_10 <- rowMeans(for_mice[,c("EmployAgri_2010","EmployAgri_2012","EmployAgri_2014", "EmployAgri_2016","EmployAgri_2017","EmployAgri_2018")], na.rm = T)
for_mice$EmployDiff_00_10 <- (for_mice$EmployAgri_10 - for_mice$EmployAgri_00)*-1


for_mice_missingcolumns <- add_any_miss(for_mice,
                                        c(FDI_10, GDP_10, ManuExport_10, Patent_10, PrimaryEnroll_10, TariffDiff_10,StartUp_10,TaxGDP_10, EmployDiff_00_10, polity_2010, conflict_2010),
                                        label = "any_miss", missing = 0, complete = 1)
for_mice_missingcolumns <- add_any_miss(for_mice_missingcolumns,
                                        c(FDI_10, GDP_10, ManuExport_10, PrimaryEnroll_10, TariffDiff_10,StartUp_10,TaxGDP_10, EmployDiff_00_10, polity_2010, conflict_2010),
                                        label = "miss_patent", missing = 0, complete = 1)

for_mice_missingcolumns$missingness <- as_factor(for_mice_missingcolumns$any_miss_vars + for_mice_missingcolumns$miss_patent_vars)

### Summary Stats Decadal ###

out_10 <- describe(cbind(for_mice$FDI_10,
                         log(for_mice$GDP_10),
                         for_mice$ManuExport_10,
                         for_mice$Patent_10,
                         for_mice$PrimaryEnroll_10,
                         for_mice$TariffDiff_10,
                         for_mice$StartUp_10,
                         for_mice$TaxGDP_10,
                         for_mice$EmployAgri_00,
                         for_mice$EmployAgri_10,
                         for_mice$EmployDiff_00_10))

### Regs 2010s ####

decadel_reg_no_gdp <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                           FDI_10 + 
                           ManuExport_10 +
                           Patent_10 + 
                           PrimaryEnroll_10 + 
                           StartUp_10 + 
                           TaxGDP_10 + 
                           polity_2010 + 
                           conflict_2010,
                         data = for_mice)

decadel_reg <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                    log(GDP_10) +
                    I(TariffDiff_10 * log(GDP_10)) +
                    ManuExport_10 +
                    asinh(FDI_10) + 
                    log(Patent_10) + 
                    log(PrimaryEnroll_10) + 
                    asinh(StartUp_10) + 
                    asinh(TaxGDP_10) + 
                    asinh(polity_2010) + 
                    asinh(conflict_2010),
                  data = for_mice)

decadel_reg_no_patent <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                              log(GDP_10) +
                              I(TariffDiff_10 * log(GDP_10)) + 
                              ManuExport_10 +
                              asinh(FDI_10) + 
                              log(PrimaryEnroll_10) + 
                              asinh(StartUp_10) + 
                              asinh(TaxGDP_10) + 
                              asinh(polity_2010) + 
                              asinh(conflict_2010),
                            data = for_mice)

decadel_outregs <- outreg(list(decadel_reg_no_gdp,decadel_reg,decadel_reg_no_patent))



outreg(decadel_reg_no_patent)


#### Inverse Probability of Treatment Weighting ####

no_na <- drop_na(for_mice, any_of(c('EmployDiff_00_10','TariffDiff_10','ManuExport_10', 'FDI_10','GDP_10', 
                                    'Patent_10', 
                                    'PrimaryEnroll_10',
                                    'StartUp_10', 
                                    'TaxGDP_10', 
                                    'polity_2010', 
                                    'conflict_2010')))

no_na$log_tariff <- asinh(no_na$TariffDiff_10)
ipw_out <- ipwpoint(TariffDiff_10, family = "gaussian", numerator = ~1, denominator = ~ FDI_10 + 
                      log(GDP_10) +
                      ManuExport_10 +
                      Patent_10 + 
                      PrimaryEnroll_10 + 
                      StartUp_10 + 
                      TaxGDP_10 + 
                      polity_2010 + 
                      conflict_2010,data = no_na)

no_na$weights <- as.numeric(ipw_out$ipw.weights)


weight_distribution <- ggplot(data = subset(no_na, weights <10 & weights > -10), 
                              aes(x = weights)) + 
  geom_histogram(bins = 15) 

weight_distribution


### USING WeightIt rather than IPW package
## allows for plotting love plots and also for the non-parametric approach!
#calculate the weights. 
weights_average <- weightit(formula = TariffDiff_10 ~ asinh(FDI_10) + 
                              log(GDP_10) +  
                              ManuExport_10 +
                              log(Patent_10) + 
                              log(PrimaryEnroll_10) + 
                              asinh(StartUp_10) + 
                              asinh(TaxGDP_10) + 
                              asinh(polity_2010) + 
                              asinh(conflict_2010),
                            data = no_na,
                            method = 'npcbps')
#we have to define a variable name object to feed into the love plot to get pretty variable names
var_name_object <- var.names(bal.tab(TariffDiff_10 ~ asinh(FDI_10) +  
                                       ManuExport_10 +
                    log(GDP_10) + 
                    log(Patent_10) + 
                    log(PrimaryEnroll_10) + 
                    asinh(StartUp_10) + 
                    asinh(TaxGDP_10) + 
                    asinh(polity_2010) + 
                    asinh(conflict_2010),
                  data = no_na)
          , type = 'vec', minimal = T)

var_name_object['asinh(FDI_10)'] <- 'asinh of FDI'
var_name_object['ManuExport_10'] <- 'Manufacturing Exports'
var_name_object['log(GDP_10)'] <- 'Log of GDP p.c'
var_name_object['log(Patent_10)'] <- 'Log of Patents'
var_name_object['log(PrimaryEnroll_10)'] <- 'Log of Primary Enrollment'
var_name_object['asinh(StartUp_10)'] <- 'asinh of Startup cost'
var_name_object['asinh(TaxGDP_10)'] <- 'asinh of Taxation of GDP'
var_name_object['asinh(polity_2010)'] <- 'asinh of Polity Score'
var_name_object['asinh(conflict_2010)'] <- 'asinh of Conflict Score'

#inspect the balance on covariates
love_plot <- love.plot(weights_average, thresholds = c(cor = .1), abs = TRUE,
          var.order = "unadjusted", line = F,
          var.names = var_name_object)

love_plot

ggsave('love_plot.png', love_plot, width = 8.5, height = 6, unit = 'in')


#add the weights to the dataset
no_na$cbps_weights <- weights_average$weights

#plot the weights to check for extreme weights
weight_distribution <- ggplot(data = no_na, 
                              aes(x = cbps_weights)) + 
  geom_histogram(bins = 15) 

weight_distribution

sd(no_na$cbps_weights)

#add the weights into the regression
iptw_reg <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                 log(GDP_10) +
                 I(TariffDiff_10 * log(GDP_10)) +
                 ManuExport_10 +
                 asinh(FDI_10) + 
                 log(Patent_10) + 
                 log(PrimaryEnroll_10) + 
                 asinh(StartUp_10) + 
                 asinh(TaxGDP_10) + 
                 asinh(polity_2010) + 
                 asinh(conflict_2010),
               data =  no_na,
               weights = cbps_weights)
summary(iptw_reg)




#### Make a world map with missingness after Decadel averages ####
world <- ne_countries(scale = "medium", returnclass = "sf")
world_missing <-  merge(world, for_mice_missingcolumns, by.x = "iso_a3", by.y = "Country.Code",all.x = T, all.y = T,  duplicateGeoms = F)

# gen world map
world_map_missing_degree <- ggplot(data = world_missing) +
  geom_sf(aes(fill = missingness)) +
  scale_fill_manual(values = c("navy", "tan", "seagreen"),
                    labels = c("Missing", "Patents Missing", "None Missing")) +
  theme(legend.position="bottom") +
  labs( fill = "Degree of Missingness")


world_map_missing_degree
ggsave('world_map_missing_degree.png', world_map_missing_degree, width = 8.5, height = 6, unit = 'in')

no_na_nopatent <- drop_na(for_mice, any_of(c('EmployDiff_00_10','TariffDiff_10', 'FDI_10','GDP_10', 'ManuExport_10',
                                             'PrimaryEnroll_10',
                                             'StartUp_10', 
                                             'TaxGDP_10', 
                                             'polity_2010', 
                                             'conflict_2010')))

no_na_nopatent$log_tariff <- asinh(no_na_nopatent$TariffDiff_10)


weights_average_nopatent <- weightit(formula = TariffDiff_10 ~ asinh(FDI_10) + 
                                       log(GDP_10) +  
                                       ManuExport_10 +
                                       log(PrimaryEnroll_10) + 
                                       asinh(StartUp_10) + 
                                       asinh(TaxGDP_10) + 
                                       asinh(polity_2010) + 
                                       asinh(conflict_2010),
                            data = no_na_nopatent,
                            method = 'npcbps')

#inspect the balance on covariates
love.plot(weights_average_nopatent, thresholds = c(cor = .1), abs = TRUE,
          var.order = "unadjusted", line = F)

#add the weights to the dataset
no_na_nopatent$cbps_weights <- weights_average_nopatent$weights

#plot the weights to check for extreme weights
weight_distribution <- ggplot(data = no_na_nopatent, 
                              aes(x = cbps_weights)) + 
  geom_histogram(bins = 15) 

weight_distribution

sd(no_na_nopatent$cbps_weights)

#add the weights into the regression
iptw_reg_nopatent <- lm(EmployDiff_00_10 ~ TariffDiff_10 +
                          log(GDP_10) +
                          I(TariffDiff_10 * log(GDP_10)) +
                          ManuExport_10 +
                          asinh(FDI_10) + 
                          log(PrimaryEnroll_10) + 
                          asinh(StartUp_10) + 
                          asinh(TaxGDP_10) + 
                          asinh(polity_2010) + 
                          asinh(conflict_2010),
               data =  no_na_nopatent,
               weights = cbps_weights)
summary(iptw_reg_nopatent)


#### PANEL DATA ####
panel_long <- subset(panel_merge[c('Country.Code', 'Time', 
                                   'EmployAgri', 
                                   "TariffDiff",
                                   "GDPpc",  
                                   "ManuExports", 
                                   "FDINetInGDP", 
                                   "PatentApps",
                                   'PrimaryEnroll',
                                   "StartUpCostGNIpc",
                                   "TaxGDP",
                                   "polity",
                                   "pop_affected")], Time < 2016)

colnames(panel_long) <- c("Country.Code","Time","EmployAgri","TariffDiff","GDPpc",
                          "ManuExports","FDINetInGDP","PatentApps","PrimaryEnroll",
                          "StartUpCostGNIpc","TaxGDP","polity", "conflict")

panel_long$Country.Code <- as_factor(panel_long$Country.Code)


#### MICE ####

panel_melted <- melt(panel_long, id.vars = c("Country.Code", "Time"))
panel_wide <- dcast(panel_melted, Country.Code ~ ... + Time)
#panel_wide$Country.Code <- as_factor(panel_wide$Country.Code)


names(panel_wide) <-ifelse(substr(names(panel_wide),1, 2) %in% c("19","20"),
                          paste(substr(names(panel_wide),6,nchar(panel_wide)),
                                substr(names(panel_wide),1,4),sep="_")   ,
                          names(panel_wide))

## When running this for the first time uncomment the lines below. 
## It takes some time to run so I save the output as a .csv file to import back afterwards. 
miced_panel <- mice(panel_wide, m = 5, method = "cart")

panel_complete_wide <- complete(miced_panel)
write.csv(panel_complete_wide, "MICE_WidePanel.csv")

#panel_complete_wide <- subset(read.csv("MICE_WidePanel.csv"), select = -c(X))



names(panel_complete_wide)<-ifelse(substr(names(panel_complete_wide),1,3) %in% c("pop"),
                                   paste('conflict',
                                         substr(names(panel_complete_wide),14,nchar(panel_wide)),sep="_")   ,
                                   names(panel_complete_wide))

panel_complete_long <- pivot_longer(panel_complete_wide, cols = -c('Country.Code'), names_to = c('.value', 'year'), names_sep = '_')
panel_complete_long <- data.frame(panel_complete_long)


#### Density plotting the mice outputs ####
comparing_data_incomplete <- panel_long
comparing_data_complete <- panel_complete_long

comparing_data_incomplete$PreMice <- rep('Pre MICE', times = length(panel_long$Country.Code))
comparing_data_complete$PreMice <- rep('Post MICE', times = length(panel_complete_long$Country.Code))
colnames(comparing_data_incomplete) <- colnames(comparing_data_complete)

comparing_data <- rbind(comparing_data_incomplete, comparing_data_complete)

new <- theme_set(theme_bw())
theme_update(text=element_text(size=12,  family="Times New Roman"))


p1 <- ggplot(data = subset(comparing_data, year == 2014), aes(GDPpc, color = PreMice)) +
  geom_density() +
  labs(x = 'GDP per capita') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p1

p2 <- ggplot(data = subset(comparing_data, year == 2014), aes(ManuExports, color = PreMice)) +
  geom_density() +
  labs(x = 'Manufactured Exports (%)') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p2

p3 <- ggplot(data = subset(comparing_data, year == 2014), aes(FDINetInGDP, color = PreMice)) +
  geom_density() +
  labs(x = 'FDI') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p3

p4 <- ggplot(data = subset(comparing_data, year == 2014), aes(PatentApps, color = PreMice)) +
  geom_density() +
  labs(x = 'Patent Applications') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p4

p5 <- ggplot(data = subset(comparing_data, year == 2014), aes(PrimaryEnroll, color = PreMice)) +
  geom_density() +
  labs(x = 'Primary Enrollment Rate') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p5

p6 <- ggplot(data = subset(comparing_data, year == 2014), aes(StartUpCostGNIpc, color = PreMice)) +
  geom_density() +
  labs(x = 'Startup Cost (% of GNI p.c.)') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p6

p7 <- ggplot(data = subset(comparing_data, year == 2014), aes(TaxGDP, color = PreMice)) +
  geom_density() +
  labs(x = 'Tax (% of GDP)') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p7

p8 <- ggplot(data = subset(comparing_data, year == 2014), aes(polity, color = PreMice)) +
  geom_density() +
  labs(x = 'Democracy Score') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p8

p9 <- ggplot(data = subset(comparing_data, year == 2014), aes(conflict, color = PreMice)) +
  geom_density() +
  labs(x = 'Conflict Score') +
  theme(legend.position = 'bottom', legend.title = element_blank()) 
p9

combined <- p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9 & theme(legend.position = "bottom")
combined[[1]] = combined[[1]] + theme(axis.title.y = element_blank())
combined[[2]] = combined[[2]] + theme( axis.title.y = element_blank())
combined[[3]] = combined[[3]] +  theme( axis.title.y = element_blank())
combined[[5]] = combined[[5]] +  theme(axis.title.y = element_blank())
combined[[6]] = combined[[6]] + theme(axis.title.y = element_blank())
combined[[7]] = combined[[7]] + theme(axis.title.y = element_blank())
combined[[8]] = combined[[8]] + theme(axis.title.y = element_blank())
combined[[9]] = combined[[9]] + theme(axis.title.y = element_blank())

combined = combined + plot_layout(guides = "collect")
combined
ggsave('combined_density.png', combined, width = 8.5, height= 8.5, unit = 'in')

#### Panel Regressions ####

# raw panel regression
panel_reg <- plm(I(lag(EmployAgri, 1) - EmployAgri)  ~ 
                        TariffDiff +
                        lag(log(GDPpc), 1) +
                        I(TariffDiff*lag(log(GDPpc), 1)) +
                        lag(ManuExports, 1) +
                        asinh(FDINetInGDP) +
                        log(PatentApps) +
                        log(PrimaryEnroll) +
                        asinh(StartUpCostGNIpc) +
                        asinh(TaxGDP) +
                        asinh(polity) +
                        asinh(conflict),
                      index = c('Country.Code', 'Time'), data = panel_long,
                      model = "pooling")

# miced panel regression
panel_reg_mice <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                        TariffDiff +
                        lag(log(GDPpc), 1) +
                        I(TariffDiff*lag(log(GDPpc), 1)) +
                        lag(ManuExports, 1) +
                        asinh(FDINetInGDP) +
                        log(PatentApps) +
                        log(PrimaryEnroll) +
                        asinh(StartUpCostGNIpc) +
                        asinh(TaxGDP) +
                        asinh(polity) +
                        asinh(conflict),
                      index = c('Country.Code', 'year'), 
                      data = panel_complete_long,
                      model = "pooling")

panel_reg_mice_yearFE <- plm(I(lag(EmployAgri, 1) - EmployAgri)~ 
                               TariffDiff +
                               lag(log(GDPpc), 1) +
                               I(TariffDiff*lag(log(GDPpc), 1)) +
                               lag(ManuExports, 1) +
                               asinh(FDINetInGDP) +
                               log(PatentApps) +
                               log(PrimaryEnroll) +
                               asinh(StartUpCostGNIpc) +
                               asinh(TaxGDP) +
                               asinh(polity) +
                               asinh(conflict),
                             index = c('year'), data = panel_complete_long,
                             model = "pooling"
)

panel_reg_mice_countryFE <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                  TariffDiff +
                                  lag(log(GDPpc), 1) +
                                  I(TariffDiff*lag(log(GDPpc), 1)) +
                                  lag(ManuExports, 1) +
                                  asinh(FDINetInGDP) +
                                  log(PatentApps) +
                                  log(PrimaryEnroll) +
                                  asinh(StartUpCostGNIpc) +
                                  asinh(TaxGDP) +
                                  asinh(polity) +
                                  asinh(conflict),
                                index = c('Country.Code'), 
                                data = panel_complete_long,
                                model = "pooling")


#### TABLES ####

## Table 1 - summary stats
summarystatistics <- stargazer::stargazer(panel_wide[,c("EmployAgri_2015", 
                                   "TariffDiff_2015", 
                                   "GDPpc_2015",
                                   "ManuExports_2015",
                                   "FDINetInGDP_2015",
                                   "PatentApps_2015", 
                                   "PrimaryEnroll_2015",
                                   "StartUpCostGNIpc_2015",
                                   "TaxGDP_2015",
                                   "polity_2015",
                                   "conflict_2015")],
                     summary = TRUE, type = 'html',
                     omit.summary.stat = c('p25','p75') 
                     ,out = 'capstone_summarystats_table.doc', digits =3)

summarystatistics <- stargazer::stargazer(no_na[,c("EmployDiff_00_10", 
                                                   'TariffDiff_10',
                                                   'GDP_10',
                                                   'ManuExport_10',
                                                   'FDI_10',
                                                   'Patent_10',
                                                   'PrimaryEnroll_10',
                                                   'StartUp_10',
                                                   'TaxGDP_10',
                                                   'polity_2010',
                                                   'conflict_2010')],
                                          summary = TRUE, type = 'html',
                                          omit.summary.stat = c('p25','p75'),
                                          out = 'capstone_summarystats_table_MEAN.doc', digits =3)





rob_se_panels <- list(sqrt(diag(vcovHC(panel_reg, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice_yearFE, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice_countryFE, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice, type = "HC1"))))
rob_se_averaged <- list(sqrt(diag(vcovHC(decadel_reg, type = "HC1"))),
                        sqrt(diag(vcovHC(iptw_reg, type = "HC1"))),
                        sqrt(diag(vcovHC(iptw_reg_nopatent, type = "HC1"))))

##  code for table 2
tab_Mice <- stargazer(panel_reg,
          panel_reg_mice_yearFE,
          panel_reg_mice_countryFE,
          panel_reg_mice,
          se = rob_se_panels,
          column.labels = c("RawData", 'MICE Year FEs', "MICE Country FEs", 'MICE full FEs'),
          covariate.labels = c('Tariff Difference',
                               'Log GDP p.c. previous year',
                               'Tariff Difference Log GDP p.c. previous year',
                               'Manufaturing Exports previous year',
                               'FDI (asinh)',
                               'Log of Patents',
                               'Log of Primary Enrollment',
                               'Start Up Cost (% of GNI p.c.) (asinh)',
                               'Tax (% of GDP) (asinh)',
                               'Polity (asinh)',
                               'Conflict (asinh)'),
          align = T,
          type = 'html',
          notes = c('The dependent variable is the difference between the share of employment in agriculture and the lagged share of employment in agriculture value. The treatment variable tariff difference is not significant. Robust standard errors are shown in brackets. The annotation asinh indicates that the variable is transformed using the inverse hyperbolic sine function.'),
          out = 'capstone_panel_regs_table.doc')

# code for table 3
tab_IPTW <- stargazer(decadel_reg,
          iptw_reg,
          iptw_reg_nopatent,
          se = rob_se_averaged,
          column.labels = c("Averages", 'IPTW', "IPTW"),
          type = 'html',
          covariate.labels = c('Tariff Difference',
                               'Log GDP p.c.',
                               'Tariff Difference Log GDP p.c.',
                               'Manufaturing Exports',
                               'FDI (asinh)',
                               'Log of Patents',
                               'Log of Primary Enrollment',
                               'Start Up Cost (% of GNI p.c.) (asinh)',
                               'Tax (% of GDP) (asinh)',
                               'Polity (asinh)',
                               'Conflict (asinh)'),
          align = T,
          fontsize = 10,
          notes = c('The dependent variable is the difference between the average share of agricultural employment from 2006-2008 and to the average between 2010 and 2018. The treatment variable tariff difference is not significant. Robust standard errors are shown in brackets. The annotation asinh indicates that the variable is transformed using the inverse hyperbolic sine function.'),
          out = 'capstone_iptw_regs_table.doc')

## TABLE 4
panel_reg_mice_noPatents <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                  TariffDiff +
                                  lag(log(GDPpc), 1) +
                                  I(TariffDiff*lag(log(GDPpc), 1)) +
                                  lag(ManuExports, 1) +
                                  asinh(FDINetInGDP) +
                                  log(PrimaryEnroll) +
                                  asinh(StartUpCostGNIpc) +
                                  asinh(TaxGDP) +
                                  asinh(polity) +
                                  asinh(conflict),
                      index = c('Country.Code', 'year'), data = panel_complete_long,
                      model = "pooling")

rob_se_collider<- list(sqrt(diag(vcovHC(panel_reg_mice, type = "HC1"))),
                      sqrt(diag(vcovHC(panel_reg_mice_noPatents, type = "HC1"))))

##  code for table 4
tab_collider <- stargazer(panel_reg_mice,
          panel_reg_mice_noPatents,
          se = rob_se_collider,
          column.labels = c("Full Model",'Excluding Patents'),
          align = T,
          type = 'html',
          covariate.labels = c('Tariff Difference',
                               'Log GDP p.c. previous year',
                               'Tariff Difference Log GDP p.c. previous year',
                               'Manufaturing Exports previous year',
                               'FDI (asinh)',
                               'Log of Patents',
                               'Log of Primary Enrollment',
                               'Start Up Cost (% of GNI p.c.) (asinh)',
                               'Tax (% of GDP) (asinh)',
                               'Polity (asinh)',
                               'Conflict (asinh)'),
          notes = c('The dependent variable is the difference between the share of employment in agriculture and the lagged share of employment in agriculture value. The treatment variable tariff difference is not significant. Robust standard errors are shown in brackets.'),
          out = 'capstone_panel_regs_collider.doc')



#autocorrelation check. 
acf <- acf(panel_complete_long$TariffDiff, lag.max = 10)


panel_reg_mice_withLAG <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                TariffDiff + 
                                lag(TariffDiff, 1) +
                                lag(log(GDPpc), 1) +
                                I(lag(TariffDiff, 1)*lag(log(GDPpc), 1)) +
                                lag(TradeGDP, 1) +
                                lag(ManuExports, 1) +
                                FDINetInGDP +
                                PatentApps +
                                PrimaryEnroll +
                                StartUpCostGNIpc +
                                TaxGDP +
                                polity +
                                conflict,
                              index = c('Country.Code', 'year'), data = panel_complete_long,
                              model = "pooling")
stargazer(panel_reg_mice_withLAG, type = "text")



#### IPTW for Panel ####

panel_nas <- na.exclude(panel_complete_long)


#this is working now.
iptw_mice_panel <- ipwtm(TariffDiff, family = "gaussian",numerator = ~1, denominator = ~ log(GDPpc) + 
                           TradeGDP + 
                           ManuExports + 
                           FDINetInGDP +
                           PatentApps +
                           PrimaryEnroll +
                           StartUpCostGNIpc +
                           TaxGDP +
                           polity +
                           conflict,
                         data = panel_nas,
                         id = Country.Code,
                         timevar= year,
                         corstr = "ar1",
                         type = "all")

ipw_panel_point <- ipwpoint(TariffDiff, family = "gaussian", numerator = ~1, denominator = ~ log(GDPpc) + 
                              TradeGDP + 
                              ManuExports + 
                              FDINetInGDP +
                              PatentApps +
                              PrimaryEnroll +
                              StartUpCostGNIpc +
                              TaxGDP +
                              polity +
                              conflict +
                              year +
                              Country.Code,
                            data = panel_nas)

## inspects weights
panel_nas$ipwtm <- iptw_mice_panel$ipw.weights
panel_nas$ipwpoints <- ipw_panel_point$ipw.weights

weight_hist_panel <- ggplot(data = panel_nas, aes(x = asinh(ipwpoints), fill = year)) +
  geom_density(alpha = .3)

weight_hist_panel


## IPTW REGRESSIONS

panel_reg_mice_withLAG <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                TariffDiff +  
                                lag(log(GDPpc), 1) +
                                I(TariffDiff*lag(log(GDPpc), 1)) +
                                lag(TradeGDP, 1) +
                                lag(ManuExports, 1) +
                                FDINetInGDP +
                                PatentApps +
                                PrimaryEnroll +
                                StartUpCostGNIpc +
                                TaxGDP +
                                polity +
                                conflict,
                              index = c('Country.Code', 'year'), data =panel_nas,
                              model = "pooling",
                              weights = asinh(ipwpoints))

summary(panel_reg_mice_withLAG)

## without patents to check for collider

#this is working now.
iptw_mice_panel_np <- ipwtm(TariffDiff, family = "gaussian",numerator = ~1, denominator = ~ log(GDPpc) + 
                              TradeGDP + 
                              ManuExports + 
                              FDINetInGDP +
                              PrimaryEnroll +
                              StartUpCostGNIpc +
                              TaxGDP +
                              polity +
                              conflict,
                            data = panel_nas,
                            id = Country.Code,
                            timevar= year,
                            corstr = "ar1",
                            type = "all")

ipw_panel_point_np <- ipwpoint(TariffDiff, family = "gaussian", numerator = ~1, denominator = ~ log(GDPpc) + 
                                 TradeGDP + 
                                 ManuExports + 
                                 FDINetInGDP +
                                 PrimaryEnroll +
                                 StartUpCostGNIpc +
                                 TaxGDP +
                                 polity +
                                 conflict +
                                 year +
                                 Country.Code,
                               data = panel_nas)

## inspects weights
panel_nas$ipwtm_np <- iptw_mice_panel_np$ipw.weights
panel_nas$ipwpoints_np <- ipw_panel_point_np$ipw.weights

weight_hist_panel <- ggplot(data = panel_nas, aes(x = asinh(ipwpoints_np), fill = year)) +
  geom_density(alpha = .3)

weight_hist_panel


## Checking for Collider 

panel_reg_mice_withLAG_np <- plm(I(lag(EmployAgri, 1) - EmployAgri) ~ 
                                   TariffDiff +  
                                   lag(log(GDPpc), 1) +
                                   I(TariffDiff*lag(log(GDPpc), 1)) +
                                   lag(TradeGDP, 1) +
                                   lag(ManuExports, 1) +
                                   FDINetInGDP +
                                   PrimaryEnroll +
                                   StartUpCostGNIpc +
                                   TaxGDP +
                                   polity +
                                   conflict,
                                 index = c('Country.Code', 'year'), data =panel_nas,
                                 model = "pooling",
                                 weights = asinh(ipwpoints_np))

stargazer(panel_reg_mice_withLAG_np)


